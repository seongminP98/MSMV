{"version":3,"sources":["routes/Presenters/MainPresenter.js","routes/Main.js","store.js","routes/Presenters/AuthPresenter.js","routes/Auth.js","routes/Presenters/JoinPresenter.js","routes/Join.js","routes/Presenters/HeaderPresenter.js","routes/Header.js","routes/Presenters/SearchPresenter.js","routes/Search.js","routes/Presenters/DetailPresenter.js","routes/Detail.js","routes/Presenters/MyPagePresenter.js","routes/MyPage.js","routes/Presenters/GenrePresenter.js","routes/Genre.js","routes/Presenters/RecommPresenter.js","routes/Recomm.js","routes/Presenters/OttListPresenter.js","routes/Presenters/OttRoomPresenter.js","routes/Ott.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","styled","div","SwipeDiv","TitleDiv","SwipePad","NoMovieDiv","GenreNav","Nav","MovieImage","img","SwiperCore","use","Navigation","Pagination","Autoplay","Scrollbar","MainPresenter","topTenData","boxOfficeData","genreList","selectGenre","length","className","spaceBetween","slidesPerView","slidesPerGroup","navigation","pagination","clickable","map","movie","to","movieCd","style","width","height","src","image","alt","title","name","Item","Link","value","onClick","code","Main","useState","setTopTenData","setBoxOfficeData","getTopTen","a","axios","get","process","then","response","data","result","catch","error","window","alert","getBoxOffice","boxOffice","genre","setGenre","setGenreList","getGenre","undefined","useEffect","e","target","getAttribute","createStore","state","action","user","type","__REDUX_DEVTOOLS_EXTENSION__","Login","LoginForm","form","LoginTitle","InputContainer","Input","input","PasswordTitleDiv","LoginButton","button","AskJoinDiv","AskJoinTitle","JoinLink","LinkInnerSpan","span","AuthPresenter","id","password","onChange","onSubmit","placeholder","Auth","setId","setPassword","props","history","useHistory","post","withCredentials","push","pathname","store","dispatch","swal","Join","JoinForm","JoinTitle","JoinButton","AskLoginDiv","AskLoginTitle","LoginLink","JoinPresenter","nickname","passwordCheck","required","maxLength","minLength","setNickname","setPasswordCheck","isIdAvailable","isNicknameAvailable","requestJoin","Header","header","Banner","Menu","StyledLink","MenuLeft","IntroMent","HeaderPresenter","LogoutClick","getState","setUser","subscribe","Search","SearchUpper","CritSelect","select","CritOption","option","SearchInput","MovieCard","MovieImageLink","MovieTitleLink","MovieContent","p","MovieSummary","SummaryLink","SearchPresenter","searchCritCheck","submitSearch","takeInput","currentSearch","i","replace","date","summary","optionsState","onKeyPress","onerror","rate","searchCrit","setSearchCrit","searchContent","setSearchContent","setResult","setCurrentSearch","key","movieNm","check","status","message","dirNm","DetailContainer","DetPad","ReviewButton","ReviewTitle","Detail","Pad","ComLeft","ThemovieTitle","MovieOutline","MovieElement","GridContainer","MyImage","ReviewContent","Font","ReviewDeleteButton","PeopleWord","TitleWord","NonReviewDiv","YTButton","DetailPresenter","movieData","movieReviews","peoples","recommendedMovies","reviewOnChange","writeOnClick","submitDeleteReview","starRating","onStarClick","director","actor","people","peopleJob","href","grade","openDt","genres","country","runningTime","Tabs","defaultActiveKey","Tab","eventKey","label","Fragment","peopleImage","peopleName","gutter","lg","md","xs","movieCode","starCount","size","rating","display","borderRadius","slice","reverse","review","actions","commenter","content","moment","created","format","editing","contents","location","useLocation","URLSearchParams","search","setMovieData","setMovieReviews","setPeoples","setStarRating","setRecommendedMovies","getMovieData","console","log","forEach","item","index","object","splice","reviewContent","setReviewContent","submitWriteReview","movieTitle","delete","nextValue","prevValue","Wrapper","MainTitle","SubTitle","LeftLayout","SideBySide1","SideBySide2","SideBySide3","NicknameLayout","PasswordLayout","MyReviewLayout","Table","Review","Rate","Title","Info","Contents","DeleteLayout","AllInput","AllButton","WarningButton","HJLayout","MyTab","AllThing","Pointword","ExitPopover","Popover","MyPagePresenter","takeNewNickname","submitNewNickname","takeOldPassword","takeNewPassword","submitNewPassword","takeWithdrawPassword","submitWithdraw","myReviews","popover","Body","Button","Container","Row","Col","sm","variant","Content","Pane","eventkey","user_id","OverlayTrigger","trigger","placement","overlay","review_id","MyPage","newNickname","setNewNickname","newPassword","setNewPassword","oldPassword","setOldPassword","withdrawPassword","setWithdrawPassword","setMyReviews","patch","setTimeout","reload","pw","getMyReviews","GenrePresenter","Genre","genreSearch","Recomm","SearchMovieModal","Modal","HelpImage","SelectMovieLine","SelectMovieCard","SelectTitle","SelectAsk","h2","SearchMovieList","SelectMovieImage","RecommContent","RecommLink","ModalButtonDiv","SelectButton","CreateButton","MovieTitle","RecommTitle","RecommPresenter","selectMovie","deleteMovie","confirmMovie","recommendMovieList","selectedMovies","selectedMovieList","show","setShow","handleClose","onHide","Footer","movieList","setMovieList","includes","filter","showRecommendMovies","getSelectedMovies","setSelectedMovies","setRecommendMovieList","showSelectedMovies","setSelectedMovieList","STabs","STabList","TabList","STab","STab2","STabPanel","TabPanel","StyledButton","WriteButton","WriteImage","OttSelect","OttOption","OttPage","OttRoomListDiv","OttRoom","OttRoomTitle","OttRoomContent","OttRoomElement","MyRoomListDiv","MyRoom","NoRoomListDiv","StyledDropdown","Dropdown","StyledDropdownToggle","Toggle","ClassIcon","InputLabel","InputDiv","UnitInput","InputTitle","UnitLabel","UnitDiv","OttListPresenter","classChange","titleChange","classificationChange","max_member_numChange","createRoom","enterRoom","translationPlatform","roomList","myRoomList","searchClass","selectedTabClassName","selectedTabPanelClassName","onSelect","room","classification","current_count","max_member_num","total_money","group_id","pattern","ContentTitle","OttDiv","MembersDiv","MemberDiv","MemberUpperDiv","MemberLowerDiv","Icon","ContentDiv","ContentLine1","ContentElement1","ContentLine2","ContentElement2","ContentLine3","ContentElement3","ContentTitle3","ContentLine4","ContentElement4","ContentElement4_2","MenuDiv","MenuButton","NoticeInput","textarea","HalfInput","RemittanceDiv","Remittance","CommentDeleteButton","CommentContent","CommentDiv","Comment2","Comment","NonCommentDiv","CommentButton","CommentForm","ExitButton","OttRoomPresenter","groupDetail","exitRoom","remittances","detailTitleChange","noticeChange","accountChange","ott_idChange","ott_pwdChange","termChange","start_dateChange","newMoneyChange","commentsChange","patchDetail","checkMemberRemittance","sendRemittanceDone","setMemberRemittance","deleteOnClick","getRoomDetail","remittanceModalShow","setRemittanceModalShow","members","member","authority","remittance","notice","start_date","term","end_date","account","div_money","Object","keys","ott_id","ott_pwd","ADMIN","comments","comment","defaultValue","closeButton","remittanceCheck_id","Ott","match","setSearchClass","getRoomList","getClassRoomList","setRoomList","setTitle","setClassification","setMax_member_num","change","getMyRoomList","setGroupDetail","setDetailTitle","setNotice","setAccount","setOtt_id","setOtt_pwd","setTerm","setStartDate","setNewMoney","submit","setMyRoomList","detailTitle","newMoney","validateDate","today","Date","money","tempDate","setDate","getDate","Number","setRemittances","groupId","remittance_id","setContents","platform","detailChange","detailSubmit","exact","path","FooterDesign","App","isLoginChecked","setIsLoginChecked","loginCheck","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a35097ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, Pagination, Autoplay, Scrollbar } from \"swiper\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport {Nav} from 'react-bootstrap';\r\nimport '../../App.css';\r\n\r\n// const Wrapper = styled.div`\r\n    \r\n// `;\r\n\r\nconst MainPage = styled.div`\r\n  background-color: white;\r\n  min-width:1190px;\r\n`;\r\n// origin background-color: #eaeaea;\r\n\r\n// const MainDiv = styled.div`\r\n  \r\n// `;\r\n\r\n// const SearchedDiv = styled.div`\r\n\r\n// `;\r\n\r\n// const BoxofficeDiv = styled.div`\r\n//   display: inline-block;\r\n// `;\r\n\r\nconst SwipeDiv = styled.div`\r\n  padding-top: 25px;\r\n`;\r\n\r\n// const Boxoffice = styled.div`\r\n\r\n//   display: flex;\r\n\r\n//   width: 1300px;\r\n//   background: #606060;\r\n//   float: right;\r\n//   list-style: none;\r\n//   padding: 15px;\r\n//   border-radius: 10px;\r\n//   box-shadow: 0 15px 10px #000;\r\n//   font-family: 'Noto Sans KR', sans-serif;\r\n// `;\r\n\r\n// const BoxofficeImg = styled.div`\r\n//   display: inline-block;\r\n  \r\n//   width: 390px;\r\n//   height: auto;\r\n//   margin: 10px -90px 0px -90px;\r\n// `;\r\n\r\n// const BoxofficeTitle = styled.div`\r\n\r\n//   text-decoration: none;\r\n//   margin-bottom: 50px;\r\n  \r\n// `;\r\n\r\n// const BannerPad = styled.div`\r\n//     padding-left: 50px;\r\n//     padding-right: 50px;\r\n//     padding-bottom: 50px;\r\n// `;\r\n\r\n// const SearchButton = styled(Link)`\r\n//   font-weight: 600;\r\n//   background: white;\r\n//   border: 1px black;\r\n//   padding: 10px;\r\n//   padding-bottom: 10px;\r\n//   cursor: pointer;\r\n//   border-radius: 2px;\r\n//   text-decoration: none;\r\n//   transition: .2s all;\r\n\r\n//   &:hover {\r\n//       background: lightblue;\r\n//   }\r\n// `;\r\n\r\nconst TitleDiv = styled.div`\r\n  font-size: 35px;\r\n  font-family: 'Jua', 'Nanum Gothic', sans-serif;\r\n  padding-bottom: 20px;\r\n  font-weight: 100;\r\n`;\r\n\r\nconst SwipePad = styled.div`\r\n    padding-left: 100px;\r\n    padding-right: 100px;\r\n    padding-bottom: 20px;\r\n    transition-duration: 0.5s;\r\n`;\r\n\r\n\r\nconst NoMovieDiv = styled.div`\r\n  margin-top : 10px;\r\n  font-size: 20px;\r\n`\r\n\r\nconst GenreNav = styled(Nav)`\r\n  position: relative;\r\n  bottom : 10px;\r\n  & div { \r\n    font-size: 15px;\r\n    margin: 10px;\r\n    background-color: #C9C7FF;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    transition: .2s all;\r\n    font-weight: 100;\r\n    font-family: 'Jua', sans-serif;\r\n    border-radius: 5px;\r\n    &:hover {\r\n      background: #E8E7FF;\r\n    }\r\n    &:focus-within {\r\n      background: #E8E7FF;\r\n    }\r\n  }\r\n`\r\n\r\nconst MovieImage = styled.img`\r\n  border-radius: 5px;\r\n`\r\n\r\nSwiperCore.use([Navigation, Pagination, Autoplay, Scrollbar])\r\n\r\nconst MainPresenter = ({topTenData, boxOfficeData, genreList, selectGenre}) => {\r\n\r\n  return (\r\n    <MainPage>\r\n      <SwipeDiv>\r\n          <TitleDiv>주간 인기 영화</TitleDiv>\r\n            {topTenData.length ? <SwipePad>\r\n              <Swiper\r\n                className=\"banner\"\r\n                spaceBetween={10}\r\n                slidesPerView={5}\r\n                slidesPerGroup={5}\r\n                navigation\r\n                pagination={{ clickable: true }} \r\n                >\r\n                {topTenData && topTenData.map((movie) => ( \r\n                <SwiperSlide key={movie.movieCd}> \r\n                  <Link to={`/Detail?code=${movie.movieCd}`}>\r\n                    <MovieImage style={{ width:'auto', height:'100%'}} src={movie.image} alt={movie.title}/>\r\n                  </Link>\r\n                </SwiperSlide>\r\n                ))}\r\n                <br/>\r\n                <br/>\r\n              </Swiper>   \r\n            </SwipePad> : <SwipePad>\r\n                <SwiperSlide>\r\n                  <NoMovieDiv>집계된 데이터가 없습니다.</NoMovieDiv>\r\n                </SwiperSlide>\r\n              </SwipePad>}\r\n            \r\n        </SwipeDiv>\r\n      <SwipeDiv>\r\n        <TitleDiv>최근 박스오피스 개봉영화</TitleDiv>\r\n          <SwipePad>\r\n            <Swiper\r\n              className=\"banner\"\r\n              spaceBetween={10}\r\n              slidesPerView={5}\r\n              slidesPerGroup={5}\r\n              navigation\r\n              pagination={{ clickable: true }} \r\n              >\r\n            \r\n              {boxOfficeData && boxOfficeData.map((movie) => ( \r\n                <SwiperSlide key={movie.movieCd}>\r\n                  <Link to={`/Detail?code=${movie.movieCd}`}>\r\n                    <MovieImage style={{ width:'auto', height:'100%'}} src={movie.image} alt={movie.name}/>\r\n                  </Link>\r\n                </SwiperSlide>\r\n              ))}\r\n              <br/>\r\n              <br/>\r\n            </Swiper>   \r\n          </SwipePad>\r\n      </SwipeDiv>\r\n\r\n     {/*  \r\n        1. 드라마   2. 판타지   4. 공포     5. 로맨스\r\n        6. 모험     7. 스릴러   8. 느와르   10. 다큐멘터리\r\n        11. 코미디  12. 가족    13. 미스터리\r\n        14. 전쟁    15. 애니메이션 \r\n        16. 범죄    17. 뮤지컬  18. SF      19. 액션\r\n     */ }\r\n      <br/>\r\n      <TitleDiv>장르별 영화</TitleDiv>\r\n      <GenreNav className=\"justify-content-center\">\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"1\" onClick={selectGenre}>드라마</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"2\" onClick={selectGenre}>판타지</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"4\" onClick={selectGenre}>공포</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"5\" onClick={selectGenre}>로맨스</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"6\" onClick={selectGenre}>모험</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"7\" onClick={selectGenre}>스릴러</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"11\" onClick={selectGenre}>코미디</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"12\" onClick={selectGenre}>가족</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"15\" onClick={selectGenre}>애니메이션</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"18\" onClick={selectGenre}>SF</GenreNav.Link>\r\n        </GenreNav.Item>\r\n        <GenreNav.Item>\r\n          <GenreNav.Link value=\"19\" onClick={selectGenre}>액션</GenreNav.Link>\r\n        </GenreNav.Item>\r\n      </GenreNav>\r\n      \r\n      <SwipeDiv>\r\n        <SwipePad>\r\n          <Swiper\r\n            className=\"banner\"\r\n            spaceBetween={10}\r\n            slidesPerView={5}\r\n            slidesPerGroup={5}\r\n            navigation\r\n            pagination={{ clickable: true }} \r\n            >\r\n            {genreList && genreList.map((movie) => ( \r\n                <SwiperSlide key={movie.code}>\r\n                  <Link to={`/Detail?code=${movie.code}`}>\r\n                    <MovieImage style={{ width:'auto', height:'100%'}} src={movie.image} alt={movie.name}/>\r\n                  </Link>\r\n                </SwiperSlide>\r\n            ))}\r\n            <br/>\r\n            <br/>\r\n          </Swiper>   \r\n        </SwipePad>\r\n      </SwipeDiv>\r\n    \r\n      {/* <BannerPad>\r\n        <Swiper\r\n            className=\"banner\"\r\n            spaceBetween={50}\r\n            slidesPerView={1}\r\n            \r\n            scrollbar={{ draggable: true }}\r\n            pagination={{ clickable: true }} \r\n            autoplay={{ delay: 3000 }}\r\n            \r\n            >\r\n                <SwiperSlide> \r\n                  <div style={{\r\n                    background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                    39%,rgba(0,0,0,0)\r\n                    41%,rgba(0,0,0,0.65)\r\n                    100%),\r\n                    url('https://images.unsplash.com/photo-1487174244970-cd18784bb4a4?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=752&q=80'), #1c1c1c`,\r\n                        height: '500px',\r\n                        backgroundSize: '100%, cover',\r\n                        backgroundPosition: 'center, center',\r\n                        width: '100%',\r\n                        position: 'relative',\r\n                        marginTop: '50px'\r\n                      }}>\r\n                      <div>\r\n                        <div style={{ position: 'absolute', maxWidth: '800px', bottom: '9rem', marginLeft: '20rem' }}>\r\n                          <h2 style={{fontStyle: 'italic', fontSize:'30px', fontWeight: 'bold',color: 'white'}}> 무더운 여름 공기를 시원하게 해줄 공포영화를 원한다면? </h2>\r\n                          <br/>\r\n                          <p style={{ color: 'white', fontSize: '1rem' }}> 지금 바로 검색하러가기</p>\r\n                          <SearchButton to=\"/Genre/4\"><img src=\"https://beslow.co.kr/assets/img/arrow-foward.png\" width=\"25px\" alt=\"\"/></SearchButton>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n                <SwiperSlide> \r\n                  <div style={{\r\n                    background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                    39%,rgba(0,0,0,0)\r\n                    41%,rgba(0,0,0,0.65)\r\n                    100%),\r\n                    url('https://images.unsplash.com/photo-1498747946579-bde604cb8f44?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1789&q=80'), #1c1c1c`,\r\n                      height: '500px',\r\n                      backgroundSize: '100%, cover',\r\n                      backgroundPosition: 'center, center',\r\n                      width: '100%',\r\n                      position: 'relative',\r\n                      marginTop: '50px'\r\n                    }}>\r\n                    <div>\r\n                        <div style={{ position: 'absolute', maxWidth: '800px',  top: '50%', left: '50%', transform: 'translate( -50%, -50% )'  }}>\r\n                            <h2 style={{  fontStyle: 'italic', fontSize:'30px', fontWeight: 'bold',color: 'white' }}> 장마를 잠시나마 잊게해줄<br/>  힐링영화를 원한다면? </h2>\r\n                            <br/>\r\n                            <p style={{ color: 'white', fontSize: '1rem' }}> 지금 바로 검색하러가기</p>\r\n                            <SearchButton to=\"/Genre/6\"><img src=\"https://beslow.co.kr/assets/img/arrow-foward.png\" width=\"25px\" alt=\"\"/></SearchButton>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n                <SwiperSlide> \r\n                  <div style={{\r\n                          background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                      39%,rgba(0,0,0,0)\r\n                      41%,rgba(0,0,0,0.65)\r\n                      100%),\r\n                      url('https://images.unsplash.com/photo-1606335543042-57c525922933?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1954&q=80'), #1c1c1c`,\r\n                          height: '500px',\r\n                          backgroundSize: '100%, cover',\r\n                          backgroundPosition: 'center, center',\r\n                          width: '100%',\r\n                          position: 'relative',\r\n                          marginTop: '50px'\r\n                      }}>\r\n                    <div>\r\n                      <div style={{ position: 'absolute', maxWidth: '800px', top: '50%', left: '50%', transform: 'translate( -50%, -50% )' }}>\r\n                        <h2 style={{ fontStyle: 'italic', fontSize:'30px', fontWeight: 'bold', color: 'white' }}> 계속되는 폭염을 시원하게 날려줄<br/>  격투영화가 보고싶다면? </h2>\r\n                        <br/>\r\n                        <p style={{ color: 'white', fontSize: '1rem' }}> 지금 바로 검색하러가기</p>\r\n                        <SearchButton to=\"/Genre/19\"><img src=\"https://beslow.co.kr/assets/img/arrow-foward.png\" width=\"25px\" alt=\"\"/></SearchButton>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n          </Swiper> \r\n        </BannerPad> */}\r\n    </MainPage>\r\n  );\r\n};\r\n\r\nexport default MainPresenter;","import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport MainPresenter from './Presenters/MainPresenter.js'\r\n\r\nconst Main = () => {\r\n  const [topTenData, setTopTenData] = useState([]);\r\n  const [boxOfficeData, setBoxOfficeData] = useState([]);\r\n\r\n  const getTopTen = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/post/top10`)\r\n    .then((response) => {\r\n      setTopTenData(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      window.alert(error);\r\n    });\r\n  }\r\n\r\n  const getBoxOffice = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/post/boxOffice`)\r\n    .then((response) => {\r\n      setBoxOfficeData(response.data.boxOffice);\r\n    })\r\n    .catch((error) => {\r\n      window.alert(error);\r\n    });\r\n  }\r\n  \r\n\r\n\r\n  const [genre, setGenre] = useState();\r\n  const [genreList, setGenreList] = useState([]);\r\n\r\n  const getGenre = async () => {\r\n    if (genre === undefined)\r\n      setGenre(1);\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/search/genre/${genre}`)\r\n    .then((response) => {\r\n      setGenreList(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      window.alert(error);\r\n    });\r\n  }\r\n\r\n  const selectGenre = (e) => {\r\n    setGenre(e.target.getAttribute(\"value\"));\r\n  }\r\n\r\n  useEffect(() => getTopTen(), []);\r\n  useEffect(() => getBoxOffice(), []);\r\n  useEffect(() => getGenre(), [genre]);\r\n  \r\n  return (\r\n    <MainPresenter topTenData={topTenData} boxOfficeData={boxOfficeData} genreList={genreList} selectGenre={selectGenre}/>\r\n  )\r\n}\r\n\r\nexport default Main;","import { createStore } from 'redux';\r\n\r\nexport default createStore((state, action) => {\r\n  if (state === undefined) {\r\n    return { user: null };\r\n  }\r\n\r\n  if (action.type === 'LOGIN') {\r\n    return { ...state, user: action.user };\r\n  }\r\n\r\n  if (action.type === 'LOGOUT') {\r\n    return { ...state, user: null };\r\n  }\r\n\r\n  if (action.type === 'USER_UPDATED') {\r\n    return { ...state, user: action.user };\r\n  }\r\n}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Login = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  \r\n  font-family: inter;\r\n  height:800px;\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n  width: 500px;\r\n  height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 50px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst LoginTitle = styled.div`\r\n  margin-top: 8px; // \r\n  font-size: 30px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 80%;\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0px 10px;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 1px;\r\n  transition: border 0.1s ease-in-out;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 2px solid #6799ff;\r\n  }\r\n`;\r\n\r\nconst PasswordTitleDiv = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\n// const PasswordResetLink = styled(Link)`\r\n//   color: red;\r\n//   text-decoration: none;\r\n//   font-size: 13px;\r\n// `;\r\n\r\nconst LoginButton = styled.button`\r\n  margin-top: 25px;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n  width: 80%;\r\n  background-color: #6b66ff;\r\n  height: 50px;\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  border-radius: 20px;\r\n  &:hover {\r\n    background-color: #6799ff;\r\n    color: white;\r\n  }\r\n  \r\n`;\r\n\r\nconst AskJoinDiv = styled.div`\r\n  margin-top: 30px;\r\n  position: relative;\r\n  top: -60px;\r\n  display: flex;\r\n`;\r\n\r\nconst AskJoinTitle = styled.div`\r\n  margin-right: 8px;\r\n  font-size: 15px;\r\n  color: gray;\r\n`;\r\n\r\nconst JoinLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n  position: relative;\r\n  top: -1px;\r\n  transition: all 0.1 ease-in-out;\r\n  &:hover {\r\n    color: darkred;\r\n  }\r\n`;\r\n\r\nconst LinkInnerSpan = styled.span`\r\n  display: box;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst AuthPresenter = ({ id, password, onChange, onSubmit }) => {\r\n  return (\r\n    <Login>\r\n      <LoginForm onSubmit={onSubmit}>\r\n        <LoginTitle>로그인</LoginTitle>\r\n        <InputContainer>\r\n          <Input onChange={onChange} value={id} placeholder=\"아이디\" id=\"id\" />\r\n          <PasswordTitleDiv>\r\n          </PasswordTitleDiv>\r\n          <Input onChange={onChange} value={password} placeholder=\"비밀번호\" id=\"password\" type=\"password\" />\r\n        </InputContainer>\r\n        <LoginButton type=\"submit\">로그인 하기</LoginButton>\r\n      </LoginForm>\r\n\r\n      <AskJoinDiv>\r\n        <AskJoinTitle>처음 오셨나요?</AskJoinTitle>\r\n        <JoinLink to=\"/join\">\r\n          <LinkInnerSpan>회원가입</LinkInnerSpan>\r\n        </JoinLink>\r\n      </AskJoinDiv>\r\n    </Login>\r\n  );\r\n};\r\n\r\nexport default AuthPresenter;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport store from '../store';\r\nimport { useHistory } from 'react-router';\r\nimport swal from \"@sweetalert/with-react\";\r\nimport AuthPresenter from './Presenters/AuthPresenter';\r\n\r\nconst Auth = () => {\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');  \r\n  const props = { id, password };\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) => {\r\n    const target = e.target.id;\r\n    const { value } = e.target;\r\n\r\n    if (target === 'id') \r\n      setId(value);\r\n    else if (target === 'password')\r\n      setPassword(value);\r\n  }\r\n  \r\n  const onSubmit = async (e) => {\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/auth/login`, {id, password}, { withCredentials: true })\r\n    .then((response) => {\r\n      history.push({pathname : '/'});\r\n      store.dispatch({ type : 'LOGIN', user: response.data.result});\r\n    })\r\n    .catch((error) => swal(\"아이디와 비밀번호를 확인해주세요.\"));\r\n  } \r\n\r\n  return (\r\n    <AuthPresenter onChange={onChange} onSubmit={onSubmit} {...props}/>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Join = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-family: inter;\r\n`;\r\n\r\nconst JoinForm = styled.form`\r\n  width: 500px;\r\n  height: 700px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 50px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst JoinTitle = styled.div`\r\n  margin-top: 10px;\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 80%;\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0px 10px;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 1px;\r\n  transition: border 0.1s ease-in-out;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 2px solid #6799ff;\r\n  }\r\n`;\r\n\r\nconst JoinButton = styled.button`\r\n  margin-top: 25px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  width: 80%;\r\n  background-color: #6b66ff;\r\n  height: 50px;\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  &:hover {\r\n    background-color: #6799ff;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst AskLoginDiv = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n`;\r\n\r\nconst AskLoginTitle = styled.div`\r\n  margin-right: 8px;\r\n  font-size: 15px;\r\n  color: gray;\r\n`;\r\n\r\nconst LoginLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n  position: relative;\r\n  top: -1px;\r\n  transition: all 0.1 ease-in-out;\r\n  &:hover {\r\n    color: darkred;\r\n  }\r\n`;\r\n\r\nconst LinkInnerSpan = styled.span`\r\n  display: box;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst JoinPresenter = ({ onSubmit, onChange, id, password, nickname, passwordCheck }) => {\r\n  return (\r\n    <Join>\r\n      <JoinForm>\r\n        <JoinTitle>회원가입</JoinTitle>\r\n        <InputContainer>\r\n          <Input required={true} maxLength={10} value={id} placeholder=\"아이디\" id=\"id\" onChange={onChange} />\r\n          <Input required={true} maxLength={8} value={nickname} placeholder=\"닉네임\" id=\"nickname\" onChange={onChange} />\r\n          {/* <Input\r\n            required={true}\r\n            minLength={10}\r\n            maxLength={30}\r\n            type=\"email\"\r\n            value={email}\r\n            placeholder=\"이메일\"\r\n            id=\"email\"\r\n            onChange={onChange}\r\n          /> */}\r\n          <Input\r\n            required={true}\r\n            minLength={6}\r\n            maxLength={13}\r\n            type=\"password\"\r\n            value={password}\r\n            placeholder=\" 비밀번호\"\r\n            id=\"password\"\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            required={true}\r\n            minLength={6}\r\n            maxLength={13}\r\n            type=\"password\"\r\n            value={passwordCheck}\r\n            placeholder=\"비밀번호 확인\"\r\n            id=\"passwordCheck\"\r\n            onChange={onChange}\r\n          />\r\n          \r\n        </InputContainer>\r\n        <JoinButton onClick={onSubmit}>회원가입</JoinButton>\r\n        <AskLoginDiv>\r\n          <AskLoginTitle>이미 계정이 있으신가요?</AskLoginTitle>\r\n          <LoginLink to=\"/login\">\r\n            <LinkInnerSpan>로그인</LinkInnerSpan>\r\n          </LoginLink>\r\n        </AskLoginDiv>\r\n      </JoinForm>\r\n    </Join>\r\n\r\n  );\r\n};\r\n\r\nexport default JoinPresenter;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport store from '../store';\r\nimport {useHistory} from 'react-router';\r\nimport JoinPresenter from './Presenters/JoinPresenter';\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nconst Join = () => {\r\n  const [id, setId] = useState('');\r\n  const [nickname, setNickname] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const props = {id, nickname, password, passwordCheck};\r\n\r\n  const onChange = (e) => {\r\n    const target = e.target.id;\r\n    const { value } = e.target;\r\n\r\n    if (target === 'id') \r\n      setId(value);\r\n    else if (target === 'nickname')\r\n      setNickname(value);\r\n    else if (target === 'password')\r\n      setPassword(value);\r\n    else if (target === 'passwordCheck')\r\n      setPasswordCheck(value);\r\n  };\r\n\r\n  const isPasswordSame = () => {\r\n    return password === passwordCheck;\r\n  }\r\n\r\n  const isIdAvailable = async () => {\r\n    let code;\r\n\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/join/id`, { id })\r\n    .then((response) => {\r\n      if (response.data.code === 200)\r\n        code = 200;\r\n    })\r\n    .catch((e) => {\r\n      if (e.response.data.code === 400)\r\n        code = 400;\r\n      else\r\n        code = 0;\r\n    })\r\n\r\n    return code;\r\n  }\r\n\r\n  const isNicknameAvailable = async () => {\r\n    let code;\r\n\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/join/nick`, { nickname })\r\n    .then((response) => {\r\n      if (response.data.code === 200)\r\n      code = 200;\r\n  })\r\n    .catch((e) => {\r\n      if (e.response.data.code === 400)\r\n        code = 400;\r\n      else\r\n        code = 0;\r\n    })\r\n\r\n    return code;\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const requestJoin = async () => {\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/join`, { id, password, nickname })\r\n      .then(async (response) => {\r\n        await store.dispatch({ type: 'LOGIN', user: response.data.result });\r\n        swal('정상적으로 회원가입 되었습니다!');\r\n        history.push({ pathname: '/' });\r\n      })\r\n      .catch((error) => swal('회원가입 중 에러가 발생하였습니다!'));\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    if (!isPasswordSame())\r\n      return swal('비밀번호를 다시 확인해주세요.');\r\n    \r\n    //id check\r\n    switch(await isIdAvailable()) {\r\n      case 200 : \r\n        break;\r\n      case 400 :\r\n        return swal('중복된 아이디입니다.'); \r\n      default :\r\n        return swal('ID 체크 중 오류');\r\n    }\r\n\r\n    switch(await isNicknameAvailable()) {\r\n      case 200 : \r\n        break;\r\n      case 400 :\r\n        return swal('중복된 닉네임입니다.'); \r\n      default :\r\n        return swal('닉네임 체크 중 오류');\r\n    }\r\n\r\n    await requestJoin();\r\n  }\r\n\r\n  return (\r\n    <JoinPresenter onSubmit={onSubmit} onChange={onChange} {...props} />\r\n  )\r\n}\r\n\r\nexport default Join;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport { Tooltip } from \"antd\";\r\nimport \"../../App.css\";\r\n\r\n\r\n\r\nconst Header = styled.header`\r\n  position:relative; \r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr 2fr;\r\n  padding-top: 13px;\r\n  width: 100%;\r\n  height: 90px;\r\n  background-color:#6b66ff;\r\n  overflow: hidden;\r\n  border-width : 0 0 3px 0;\r\n  border-style : solid ;\r\n  border-color: #595959;\r\n  min-width:1190px;\r\n`;\r\n\r\nconst Banner = styled(Link)`\r\n  font-size: 3.1rem;\r\n  letter-spacing:3px;\r\n  color: white;\r\n  text-decoration: none;\r\n  font-family: 'Jua', sans-serif;\r\n  &:hover {\r\n    color: #C3D2E5;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: block;\r\n  text-align: right;\r\n  padding-right: 80px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  font-weight: 300;\r\n  background-color: white;\r\n  color : #6b66ff;\r\n  padding: 15px;\r\n  padding-top: 12px;\r\n  padding-bottom: 10px;\r\n  margin:0 5px 5px 0;\r\n  position: relative;\r\n  top: 20px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-size: 20px;\r\n  transition: .2s all;\r\n  font-family: 'Jua', sans-serif;\r\n  border-radius: 5px;\r\n  &:hover {\r\n      background: #7D79FF;\r\n      color: white;\r\n  }\r\n`;\r\n\r\nconst MenuLeft = styled(Menu)`\r\n  display: block;\r\n  text-align: left;\r\n  padding-left: 80px;\r\n  padding-right:0px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst IntroMent = styled(StyledLink)`\r\n  font-size: 20px;\r\n  color: white;\r\n  background: transparent;\r\n  &:hover {\r\n    color: #E8EFF8;\r\n  }\r\n`;\r\n\r\nconst HeaderPresenter = ({user, LogoutClick}) => {\r\n  return (\r\n    <Header>\r\n      <MenuLeft>\r\n        {user ? (\r\n          <>\r\n            <Tooltip title=\"마이페이지\">\r\n              <StyledLink to=\"MyPage\"><img src=\"./avatar.png\" width=\"25px\" alt=\"\"/></StyledLink>\r\n            </Tooltip>\r\n            <IntroMent to=\"MyPage\">안녕하세요, {user.nickname}님!</IntroMent>\r\n            <StyledLink to=\"/Recomm\">추천</StyledLink>\r\n            <StyledLink to=\"/Ott\">OTT</StyledLink>\r\n          </>\r\n        ) : (<></>)}  \r\n      </MenuLeft>\r\n      <Banner to='/'>무슨무비</Banner>\r\n      <Menu>\r\n        {user ? (\r\n            <StyledLink to=\"/\" onClick={LogoutClick}>로그아웃</StyledLink>\r\n        ) : (\r\n          <>\r\n            <StyledLink to=\"/Login\">로그인</StyledLink>\r\n            <StyledLink to=\"/Join\">회원가입</StyledLink>\r\n          </>\r\n        )}  \r\n            <Tooltip title=\"영화 검색\">\r\n            <StyledLink to=\"/Search\"><img src=\"./search.png\" width=\"25px\" alt=\"\"/></StyledLink>\r\n            </Tooltip>\r\n      </Menu>\r\n    </Header>\r\n  )\r\n}\r\n\r\nexport default HeaderPresenter;","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport store from '../store';\r\nimport HeaderPresenter from './Presenters/HeaderPresenter'\r\n\r\nconst Header = () => {\r\n  const [user, setUser] = useState(store.getState().user);\r\n  const sUser = () => setUser(store.getState().user);\r\n  store.subscribe(sUser);\r\n  const LogoutClick = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/auth/logout`, {withCredentials: true})\r\n    .then(() => {\r\n      store.dispatch({type : 'LOGOUT'});\r\n    })\r\n    .catch((error) => {;});\r\n  };\r\n  // check isinlogin\r\n\r\n\r\n  return (\r\n    <HeaderPresenter user={user} LogoutClick={LogoutClick}/>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, {optionsState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Search = styled.div`\r\n  padding-top: 40px;\r\n  padding-bottom: 40px;\r\n  min-height: 900px;\r\n`;\r\n\r\nconst SearchUpper = styled.div`\r\n  margin: auto;\r\n  width: 900px;\r\n  padding: auto;\r\n  align: center;\r\n  display: block;\r\n  margin-bottom: 23px;\r\n`;\r\n\r\nconst CritSelect = styled.select`\r\n  text-align: center;\r\n  width : 80px;\r\n  height : 50px;\r\n  font-size: 20px;\r\n  margin-top : 5px;\r\n  padding-left: 3px;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 1px solid #6799ff;\r\n  }\r\n`;\r\n\r\nconst CritOption = styled.option`\r\n  text-align: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  height: 50px;\r\n  margin-left : 10px;\r\n  width : 810px;\r\n  margin-top : 5px;\r\n  font-size: 20px;\r\n  padding-left: 5px;\r\n  transition: border 0.1s ease-in-out;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 2px solid #6799ff;\r\n  }\r\n`;\r\n\r\nconst MovieCard = styled.div`\r\n  padding : 15px;\r\n  class: \"card bg-primary mb-3\";\r\n  margin: 20px auto 20px auto;\r\n  width: 700px;\r\n  height: 245px;\r\n  display: block;\r\n  background-color: #E2E1FF;\r\n  box-shadow: 1px 2px 2px gray;\r\n  border-radius: 0.3em;\r\n  font-family: 나눔고딕;\r\n`;\r\n\r\nconst MovieImageLink = styled.div`\r\n  class: \"card-img-top\";\r\n  float: left;\r\n  margin: auto;\r\n`;\r\n\r\nconst MovieImage = styled.img`\r\n  overflow: hidden;\r\n  width: 150px;\r\n  height: 215px;\r\n`;\r\n\r\nconst MovieTitleLink = styled(Link)`\r\n  text-decoration: none;\r\n  font-size: 20px;\r\n  color: black;\r\n  hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  active {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst MovieContent = styled.p`\r\n  class: \"card-body\";\r\n  float:right;\r\n  margin:auto;\r\n  width : 500px;\r\n  text-align: left;\r\n  size: 20px;\r\n  dispaly:flex;\r\n  color: black;\r\n`;\r\n\r\nconst MovieSummary = styled.p`\r\n  margin-top: 2px;\r\n  text-align: left;\r\n  color: black;\r\n  width : 500px;\r\n  overflow: hidden; text-overflow: ellipsis;\r\n  display: -webkit-box; \r\n  -webkit-line-clamp: 5;\r\n  -webkit-box-orient: vertical; \r\n  word-wrap:break-word;\r\n  line-height: 1.5em;\r\n  height: 7.5em;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst SummaryLink = styled(Link)`\r\n  height: 1.5em;\r\n  position: relative;\r\n  left:450px;\r\n\r\n  color: black;\r\n\r\n  padding: 5px;\r\n  font-family: \"Jua\";\r\n  margin: auto;\r\n\r\n  border-style: solid;\r\n  border-width : 0 0 3px 0;\r\n  border-radius : 7px;\r\n  border-color: #595959;\r\n\r\n  background-color: #7D79FF;\r\n  &:hover {\r\n      background: white;\r\n      color: #6b66ff;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst SearchPresenter = ({searchCritCheck, submitSearch, takeInput, result, currentSearch}) => {\r\n\r\n  for (let i = 0 ; i < result.length; i++) {\r\n    result[i].title = result[i].title.replace(/<b>/igm, '');\r\n    result[i].title = result[i].title.replace(/<\\/b>/igm, '');\r\n    // if (result[i].rate === \"0.00\")\r\n    //   result[i].rate = \"정보 없음\";\r\n    if (result[i].date === '정보 없음')\r\n      result[i].date = \"개봉일 정보 없음\";\r\n    if (result[i].summary === \"\")\r\n      result[i].summary = \"\";\r\n  }\r\n\r\n  return (\r\n    \r\n    <Search>\r\n      \r\n      <SearchUpper>\r\n        <CritSelect name=\"SearchCrit\" value={optionsState} onChange={searchCritCheck}>\r\n          <CritOption value=\"title\"> 제목</CritOption>\r\n          <CritOption value=\"director\"> 감독</CritOption>\r\n        </CritSelect>\r\n\r\n        <SearchInput type=\"text\" onChange={takeInput} onKeyPress={submitSearch}\r\n          placeholder=\"검색어 입력\"></SearchInput>\r\n      </SearchUpper>\r\n\r\n      {currentSearch ? (<>\r\n    \r\n        {/* 무언가가 검색되었을 때의 표시 공간 */}\r\n        <h2>'{currentSearch}' 전체 검색결과가 {result.length}건 발견되었습니다.</h2>\r\n        {result.map((movie) => ( \r\n          \r\n          <MovieCard key={movie.movieCd}>\r\n            <MovieImageLink>\r\n              <Link to={`/Detail?code=${movie.movieCd}`}><MovieImage alt=\"movie\" src={movie.image} onerror=\"this.src='image.png'\"></MovieImage></Link>\r\n            </MovieImageLink>\r\n            <MovieContent>\r\n              <MovieTitleLink to={`/Detail?code=${movie.movieCd}`}>{movie.title}</MovieTitleLink> \r\n              <p>평점 {movie.rate}<br/>\r\n              {movie.date}</p>\r\n              <MovieSummary>\r\n                {movie.summary} \r\n              </MovieSummary>\r\n              <SummaryLink to={`/Detail?code=${movie.movieCd}`}>더 보기</SummaryLink>\r\n              \r\n            </MovieContent>\r\n          </MovieCard>\r\n          ))}</>) : (\r\n        <>\r\n        {/* 아무것도 검색되지 않았을 때의 표시 공간 */}\r\n            <h2>제목 또는 감독으로 영화를 검색하세요.</h2>\r\n            <div className=\"container\">\r\n              <blockquote className=\"blockquote text-center text-success\">\r\n                <p><i>\"영화란 지루한 부분이 커트된 인생이다.\"</i></p>\r\n                <footer className=\"blockquote-footer\">알프레드 히치콕</footer>\r\n              </blockquote>\r\n            </div>\r\n        </>)}\r\n      \r\n    </Search>\r\n  )\r\n}\r\n\r\nexport default SearchPresenter;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport SearchPresenter from './Presenters/SearchPresenter';\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nconst Search = () => {\r\n  const [searchCrit, setSearchCrit] = useState(\"title\");\r\n  const [searchContent, setSearchContent] = useState('');\r\n  let [result, setResult] = useState([]);\r\n  const [currentSearch, setCurrentSearch] = useState('');\r\n  const props = {searchContent, result, currentSearch};\r\n\r\n  const submitSearch = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (searchContent === '') { // 아무것도 입력하지 않을 시\r\n        setCurrentSearch(searchContent);\r\n        return; // 아무것도 반환하지 않음\r\n      }\r\n\r\n      if (searchCrit === \"title\") {\r\n        const check = 1;\r\n        const movieNm = searchContent;\r\n        await axios.post(`${process.env.REACT_APP_SERVER_URL}/search`, { check, movieNm })\r\n        .then((response) => {\r\n          if (response.status === 204)\r\n            setResult([]);\r\n          else\r\n            setResult(response.data.result);\r\n        })\r\n        .catch((error) => {\r\n          swal(error.response.data.message);\r\n        });\r\n      }\r\n      else if (searchCrit === \"director\") {\r\n        const check = 2;\r\n        const dirNm = searchContent;\r\n        await axios.post(`${process.env.REACT_APP_SERVER_URL}/search`, { check, dirNm })\r\n        .then((response) => {\r\n          if (response.status === 204)\r\n            setResult([]);\r\n          else\r\n            setResult(response.data.result);\r\n        })\r\n        .catch((error) => {\r\n          swal(error.response.data.message);\r\n        });\r\n      }\r\n      //result.sort((a, b) => a.rate < b.rate);\r\n      setCurrentSearch(searchContent);\r\n    }\r\n  }\r\n  \r\n  const takeInput = (e) => {\r\n    setSearchContent(e.target.value);\r\n  }\r\n\r\n  const SearchCritCheck = (e) => {\r\n    setSearchCrit(e.target.value);\r\n  };\r\n\r\n  return ( \r\n    <SearchPresenter searchCritCheck={SearchCritCheck} searchCrit={searchCrit} submitSearch={submitSearch} takeInput={takeInput} {...props}/>\r\n  )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport store from '../../store';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport {Row, Col, Comment, Tooltip} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport 'antd/dist/antd.less';\r\nimport '../../App.css';\r\nimport StarRatingComponent  from 'react-star-rating-component';\r\nimport moment from 'moment';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\n\r\nconst DetailContainer=styled.div`\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  height: 450px;\r\n  border: 1px #F6F6F6;\r\n`;\r\n\r\nconst DetPad=styled.div`\r\n  padding: 20px;\r\n`\r\nconst ReviewButton = styled.button`\r\n  font-weight: 600;\r\n  color: white;\r\n  border: 1px solid #6799FF;\r\n  padding: 0.5rem;\r\n  padding-bottom: 0.4rem;\r\n  margin-left:5px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  font-size:18px;\r\n  transition: .2s all;\r\n  background:#6B66FF;\r\n\r\n  &:hover {\r\n      background-color: white;\r\n      color: #6799FF;\r\n  }\r\n`;\r\nconst ReviewTitle = styled.div`\r\n  margin-top: 50px;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  font-family: 'Nanum Gothic', sans-serif;\r\n`;\r\n\r\nconst Detail = styled.div`\r\n    margin-left:40px;\r\n    margin-right:40px;\r\n    min-width:1190px;\r\n`;\r\n\r\nconst Pad = styled.div`\r\n    margin: auto;\r\n    width : 1000px;\r\n`;\r\nconst ComLeft = styled.div`\r\n    font-size: 15px;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n//현정\r\nconst ThemovieTitle = styled.div`\r\n    font-family: 'Nanum Gothic', sans-serif;\r\n    font-weight: 700;\r\n    font-size:40px;\r\n`;\r\nconst MovieOutline = styled.div`\r\n    font-family: 'Nanum Gothic', sans-serif;\r\n    font-size:15px;\r\n`;\r\nconst MovieElement = styled.div`\r\n    font-family: 'Nanum Gothic', sans-serif;\r\n    text-align: justify;\r\n    padding-top:10px;\r\n    font-size:15px;\r\n`;\r\nconst GridContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    white-space: pre-line;\r\n    margin-left:60px;\r\n    margin-right:60px;\r\n    column-gap: 15px;\r\n`;\r\nconst MyImage = styled.img`\r\n    margin:auto;\r\n    margin-top:20px;\r\n    // padding:10px;\r\n    width:550px;\r\n    border-radius : 7px;\r\n`;\r\n\r\n\r\nconst ReviewContent = styled(ComLeft)`\r\n  font-family: '나눔고딕';\r\n  white-space: pre-line;\r\n`\r\n\r\nconst Font = styled.div`\r\n  font-family: 'Gowun Dodum', sans-serif;\r\n  font-size:15px;\r\n`;\r\n\r\nconst ReviewDeleteButton = styled.button`\r\n  color: white;\r\n  background-color: #6B66FF;\r\n  border-color: #6B66FF;\r\n`\r\n\r\nconst PeopleWord = styled.div`\r\n  font-size : 13px;\r\n`;\r\n\r\nconst TitleWord = styled.div`\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  font-size : 15px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst NonReviewDiv = styled.div`\r\n  margin: 15px;\r\n  font-family: 맑은고딕;\r\n`\r\nconst YTButton = styled.button`\r\n  width: 60px;\r\n  cursor: pointer;\r\n  border: none;\r\n  transition: .2s all;\r\n  background-color: red;\r\n  display: inline;\r\n  &:hover {\r\n      background: black;\r\n  }\r\n  border-radius: 12px;\r\n`;\r\n\r\nconst DetailPresenter = ({movieData, movieReviews, peoples, recommendedMovies, reviewOnChange, writeOnClick, submitDeleteReview, starRating, onStarClick}) => {\r\n  const director = [];\r\n  const actor = [];\r\n\r\n  for (let i = 0 ; i < peoples.length; i++) {\r\n    let people = peoples[i];\r\n    people.peopleJob = people.peopleJob.replace(/\\n/g,' ');\r\n    people.peopleJob = people.peopleJob.replace(/\\t/g,'');\r\n\r\n    if (people.peopleJob === \"감독\") {\r\n      director.push(people);\r\n    }\r\n    else\r\n      actor.push(people);\r\n  }\r\n//이 영화가 해시태그로 달린 유튜브 영상 보러가기!\r\n  return (\r\n      <Detail>\r\n        <GridContainer>\r\n          <MyImage src={movieData.image} alt={movieData.title}/>\r\n          <MovieElement>\r\n            <br/>\r\n            <ThemovieTitle>{movieData.title}&nbsp;\r\n              <Tooltip title={`#${movieData.title} in YouTube`}>\r\n                <a href={`https://www.youtube.com/results?search_query=%23${movieData.title}`} target=\"_blank\">\r\n                  <YTButton>\r\n                    <img src=\"https://beslow.co.kr/assets/img/video_play.png\" width=\"30px\"/>\r\n                  </YTButton>\r\n                </a>\r\n              </Tooltip>\r\n             </ThemovieTitle>\r\n            <br/>\r\n            <MovieOutline>\r\n              <p>관람등급 : {movieData.grade}<br/>\r\n              개봉 날짜 : {movieData.openDt}<br/>\r\n              장르 : {movieData.genres}<br/>\r\n              국가 : {movieData.country}<br/>\r\n              상영시간 : {movieData.runningTime}</p>\r\n            <br/>\r\n            </MovieOutline>\r\n            \r\n            <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n              <Tab eventKey=\"home\" title=\"줄거리\">\r\n                <DetailContainer><DetPad>{movieData.summary}</DetPad></DetailContainer>\r\n              </Tab>\r\n              <Tab eventKey=\"profile\" title=\"감독\">\r\n                <PeopleWord>\r\n                <div label=\"감독\" span={3}>\r\n                  {director && director.map((people) => ( \r\n                    <React.Fragment key={people.peopleName}>\r\n                        <img style={{width:'90px', height:'auto'}} src={people.peopleImage} alt={people.peopleName}/><br/>\r\n                        <TitleWord>{people.peopleName}</TitleWord>\r\n                        <p>{people.peopleJob}</p>\r\n                    </React.Fragment>\r\n                ))}</div>\r\n                </PeopleWord>\r\n              </Tab>\r\n              <Tab eventKey=\"contact\" title=\"배우\">\r\n                <PeopleWord>\r\n                <div label=\"배우\" span={3}>\r\n                  \r\n                  <Row gutter={[16,16]}>\r\n                    {actor && actor.map((people) => ( \r\n                    <React.Fragment key={people.peopleName}>\r\n                      <Col lg={4} md={6} xs={12}>\r\n                        <img style={{ width:'100%', height:'auto'}} src={people.peopleImage} alt={people.peopleName}/> \r\n                        <TitleWord>{people.peopleName}</TitleWord>\r\n                        <p>{people.peopleJob}</p>\r\n                      </Col>\r\n                    </React.Fragment>\r\n                  ))}\r\n                  </Row>\r\n                </div>\r\n                </PeopleWord>\r\n              </Tab>\r\n              <Tab eventKey=\"recommend\" title=\"추천영화\">\r\n                {recommendedMovies.length ? <div label=\"추천\" span={3}>\r\n                  <DetailContainer><DetPad>\r\n                    <Row gutter={[16,16]}>\r\n                      {recommendedMovies && recommendedMovies.map((movie) => ( \r\n                        <React.Fragment key={movie.movieCode}>\r\n                          <Col lg={6} md={6} xs={12}>\r\n                            <Link to={`/Detail?code=${movie.movieCode}`}> <img src={movie.image} alt=\"\" width=\"100%\" height=\"auto\"/> </Link>\r\n                            <TitleWord>{movie.title}</TitleWord>\r\n                          </Col>\r\n                        </React.Fragment>\r\n                      ))}\r\n                      \r\n                      </Row>\r\n                    </DetPad></DetailContainer>\r\n                  </div> : <div>관련된 영화 데이터가 없습니다.</div>}\r\n                \r\n              </Tab>\r\n            </Tabs>\r\n            </MovieElement>\r\n        </GridContainer>\r\n      \r\n    <div>\r\n      <ReviewTitle>영화 리뷰</ReviewTitle>\r\n      {store.getState().user ? (<Pad>\r\n        <Font>\r\n          <StarRatingComponent \r\n              name=\"rate1\" \r\n              starCount={5}\r\n              size={20}\r\n              value={starRating.rating}\r\n              onStarClick={onStarClick}\r\n          />\r\n          <form style={{ display: 'flex'}}>\r\n            <textarea style={{ width: '80%', borderRadius: '2px' }}\r\n              onChange={reviewOnChange}>\r\n            </textarea>\r\n            <ReviewButton style={{ width: '20%', height: '52px' }} onClick={writeOnClick}>작성</ReviewButton>\r\n          </form>\r\n        </Font>\r\n      </Pad>):(<div>리뷰를 작성하려면 로그인하세요.</div>)} \r\n    </div>\r\n    \r\n    <Pad>\r\n      <Font>\r\n      {movieReviews.length !== 0 ? (\r\n        <>\r\n        {movieReviews.slice(0).reverse().map((review) => ( \r\n          <Comment \r\n            actions={[\r\n              <React.Fragment key={review.id}>\r\n              <div>\r\n                {store.getState().user ? (\r\n                  (store.getState().user.id === review.commenter) ? (\r\n                    <ReviewDeleteButton type=\"button\" id={review.id} onClick={submitDeleteReview}>리뷰 삭제</ReviewDeleteButton>\r\n                    ) : (<p></p>)\r\n                    ) : (<p></p>)\r\n                }\r\n              </div>\r\n              </React.Fragment>\r\n            ]}\r\n            content={\r\n              <ReviewContent>\r\n                <div>        \r\n                  <b>{review.nickname}</b> &nbsp;{moment(review.created).format(\"YYYY-MM-DD\")} 작성<br/>\r\n                  <StarRatingComponent \r\n                    name=\"rate2\" \r\n                    editing={false}\r\n                    starCount={5}\r\n                    value={review.rate}\r\n                  /><br/>\r\n                </div>\r\n                <div> \r\n                  {review.contents}\r\n                </div>\r\n              </ReviewContent>\r\n            }>\r\n            <hr/>\r\n          </Comment>\r\n        ))}\r\n        </>\r\n      ):(\r\n        <NonReviewDiv>리뷰가 없습니다.</NonReviewDiv>\r\n      )}\r\n      </Font>\r\n    </Pad>\r\n    </Detail>\r\n  )\r\n}\r\n\r\nexport default DetailPresenter;","import React, {useState, useEffect} from 'react';\r\nimport DetailPresenter from \"./Presenters/DetailPresenter.js\";\r\nimport {useLocation} from \"react-router\";\r\nimport axios from \"axios\";\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nconst Detail = () => {\r\n  // below for detail code\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const movieCd = searchParams.get(\"code\")\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [movieReviews, setMovieReviews] = useState([]);\r\n  const [peoples, setPeoples] = useState([]);\r\n  const [starRating, setStarRating] = useState(0);\r\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\r\n\r\n  const getMovieData = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/post/detail/${movieCd}`)\r\n    .then((response) => {\r\n      setMovieData(response.data.result);\r\n      setMovieReviews(response.data.result.review);\r\n      setPeoples(response.data.result.people);\r\n    })\r\n    .catch((error) => {\r\n    });\r\n\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/post/recommend/${movieCd}`)\r\n    .then((response) => {\r\n      if (response.status === 204)\r\n        setRecommendedMovies([]);\r\n      else {\r\n        console.log(response); // for test\r\n        response.data.result.forEach(function(item, index, object) {\r\n          if (item.image === 'https://ssl.pstatic.net/static/movie/2012/06/dft_img203x290.png') {\r\n            object.splice(index, 1);\r\n          }\r\n        });\r\n        setRecommendedMovies(response.data.result);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n    });\r\n  }\r\n\r\n\r\n  \r\n  // below for review code\r\n\r\n  const [reviewContent, setReviewContent] = useState('');\r\n  //const [rating, setRate] = useState(0);\r\n\r\n  const submitWriteReview = async () => {\r\n    const contents = reviewContent;\r\n    const rate = starRating.rating;\r\n    const movieTitle = movieData.title;\r\n    if (starRating === 0) {\r\n      swal(\"별점을 매겨주세요.\");\r\n      return;\r\n    }\r\n\r\n    if (contents === \"\") {\r\n      swal(\"내용을 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/review`, { contents, rate, movieCd, movieTitle }, {withCredentials : true})\r\n    .then((response) => {\r\n     getMovieData();\r\n    })\r\n    .catch((error)=> {\r\n      swal(\"리뷰 작성 중 오류가 발생했습니다.\")\r\n    })\r\n    \r\n  }\r\n\r\n  const reviewOnChange = (e) => {\r\n    setReviewContent(e.target.value);\r\n  }\r\n\r\n  const writeOnClick = () => {\r\n    submitWriteReview();\r\n  }\r\n  \r\n  const submitDeleteReview = async (e) => {\r\n    await axios.delete(`${process.env.REACT_APP_SERVER_URL}/review/${e.target.id}`, {withCredentials: true})\r\n    .then((response) => {\r\n     swal(\"리뷰가 삭제되었습니다.\")\r\n     getMovieData();\r\n    })\r\n    .catch((error)=> {\r\n      swal(error.response.data.message);\r\n    }) \r\n  }\r\n\r\n  const onStarClick = (nextValue, prevValue, name) => {\r\n    setStarRating({rating: nextValue});\r\n  };\r\n\r\n  useEffect(() => getMovieData(), [window.location.href]);\r\n\r\n  return (\r\n    <DetailPresenter movieData={movieData} movieReviews={movieReviews} peoples={peoples} recommendedMovies={recommendedMovies} reviewOnChange={reviewOnChange} writeOnClick={writeOnClick} submitDeleteReview={submitDeleteReview} starRating={starRating} onStarClick={onStarClick}/>\r\n  )\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport store from '../../store';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport '../../App.css';\r\nimport { Tab, Col, Row, Popover, OverlayTrigger, Button } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nconst Wrapper = styled.div`\r\n  margin-left:100px;\r\n  margin-right:100px;\r\n  padding-top: 20px;\r\n  padding-left: 10px;\r\n  font-family: 'Nanum Gothic', sans-serif;\r\n  min-width:1190px;\r\n`;\r\n  // background: linear-gradient(135deg , #eaeaea, #c5cae9 )\r\n\r\nconst MainTitle = styled.div`\r\n  text-align: center;\r\n  width: 400px;\r\n  padding: 20px 10px 20px 10px;\r\n  font-size: 15px;\r\n  font-family: 'Nanum Gothic', sans-serif;\r\n  font-weight: 700;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n`;\r\n\r\n\r\nconst SubTitle = styled.div`\r\n  // width: 500px;\r\n  padding-left: 30px;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst LeftLayout = styled.div`\r\n  margin: 30px 0px 0px 50px;\r\n  font-size: 16px;\r\n  width: 65%;\r\n  height: 200px;\r\n  color: black;\r\n  font-weight:400;\r\n`;\r\n\r\nconst SideBySide1 = styled.div`\r\n  height: 150px;\r\n  margin-left:-20px;\r\n`;\r\n\r\nconst SideBySide2 = styled.div`\r\n  // float: right;\r\n  // width: 500px;\r\n  margin-left :-20px;\r\n  height: 150px;\r\n  background: ;\r\n  margin-top: 0;\r\n`;\r\n\r\nconst SideBySide3 = styled.div`\r\n  float: left;\r\n  width: 500px;\r\n  height: 150px;\r\n  background: ;\r\n  margin-left: -20px;\r\n`;\r\n\r\nconst NicknameLayout = styled.div`\r\n  padding: 75px 20px 20px 20px;\r\n  height: 350px;\r\n  width: 90%;\r\n  \r\n  font-weight: 600;\r\n  \r\n  background: ;\r\n  border-radius: 3px;\r\n  border-top: 2px solid gray;\r\n  text-decoration: none;\r\n  background: white;\r\n  text-align: left;\r\n  margin-left: 0;\r\n  // margin-right: auto;\r\n`;\r\n\r\nconst PasswordLayout = styled.div`\r\n  padding: 72px 20px 20px 20px;\r\n  height: 350px;\r\n  width: 90%;\r\n  \r\n  font-weight: 600;\r\n  \r\n  // cursor: pointer;\r\n  border-radius: 3px;\r\n  border-top: 2px solid gray;\r\n  text-decoration: none;\r\n  background: white;\r\n  text-align: left;\r\n  margin-left: 0;\r\n  // margin-right: auto;\r\n  \r\n`;\r\n\r\nconst MyReviewLayout = styled.div`\r\n  padding: 72px 20px 20px 20px;\r\n  height: auto;\r\n  width: 90%;\r\n  margin-bottom:20px;\r\n\r\n  font-weight: 600;\r\n  \r\n  /* cursor: pointer; */\r\n  border-radius: 3px;\r\n  border-top: 2px solid gray;\r\n  border-bottom: 2px solid gray;\r\n  text-decoration: none;\r\n  background: white;\r\n  text-align: left;\r\n  margin-left: 0;\r\n  // margin-right: auto;\r\n`;\r\n\r\n// const Table = styled.div`\r\n//   border: 1px solid black;\r\n//   border-radius:2px;\r\n//   width: 85%;\r\n//   height: auto;\r\n//   padding: 5px 10px 5px 10px;\r\n//   margin: 0 auto;\r\n// `;\r\n\r\nconst Table = styled.div`\r\n  border-bottom : 1px solid black;\r\n  width: 85%\r\n  height: auto;\r\n  padding: 20px 10px 15px 10px;\r\n  margin: 0;\r\n\r\n`;\r\nconst Review = styled.div`\r\n  padding-left:40px;\r\n`;\r\nconst Rate = styled.div`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 18px;\r\n`\r\n\r\nconst Info = styled.div`\r\n  font-size: 12px;\r\n  text-align: right;\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst DeleteLayout = styled.div`\r\n  padding: 100px 20px 20px 20px;\r\n  height: 400px;\r\n  width: 90%;\r\n  margin-bottom:20px;\r\n  font-weight: 600;\r\n  color: #6B66FF;\r\n  /* cursor: pointer;*/\r\n  border-radius: 3px;\r\n  border-top: 2px solid gray;\r\n  border-bottom: 2px solid gray;\r\n  text-decoration: none;\r\n  background: white;\r\n  text-align: left;\r\n  margin-left: 0;\r\n  // margin-right: auto;\r\n\r\n`;\r\n\r\nconst AllInput = styled.input`\r\n\r\n  font-size: 15px;\r\n  box-sizing: border-box;\r\n  width: 260px;\r\n  height: 40px;\r\n  margin: 0px 5px 0px 20px;\r\n  border: 1px solid black;\r\n  border-radius: 3px;\r\n  transition: border 0.1s ease-in-out;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 2px solid #6B66FF;\r\n  }\r\n`;\r\n\r\nconst AllButton = styled.button`\r\n  font-family: 'Nanum Gothic', sans-serif;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  width: 60px;\r\n  height: auto;\r\n  color: #6B66FF;\r\n  border: 1px solid #6B66FF;\r\n  background-color: lightgray;\r\n  padding: 0.5rem;\r\n  padding-bottom: 0.4rem;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  transition: .2s all;\r\n\r\n  &:hover {\r\n    background: #6B66FF;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst WarningButton = styled.button`\r\n  font-family: 'Nanum Gothic', sans-serif;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  width: 60px;\r\n  height: auto;\r\n  // color: #6B66FF;\r\n  color:white;\r\n  border: 1px solid #6B66FF;\r\n  background-color: #6B66FF;\r\n  padding: 0.5rem;\r\n  padding-bottom: 0.4rem;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  transition: .2s all;\r\n\r\n  &:hover {\r\n    background: #ff6b66;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst HJLayout = styled.div`\r\n  padding: 75px 20px 20px 20px;\r\n  height: 350px;\r\n  width: 90%;\r\n  \r\n  font-weight: 600;\r\n  \r\n  background: ;\r\n  border-radius: 3px;\r\n  border-top: 2px solid gray;\r\n  text-decoration: none;\r\n  background: white;\r\n  text-align: left;\r\n  margin-left: 0;\r\n  // margin-right: auto;\r\n  \r\n`;\r\nconst MyTab = styled.div`\r\n    font-size: 20px;\r\n`;\r\nconst AllThing = styled.div`\r\n  \r\n`;\r\n//background: linear-gradient(135deg , #eaeaea, #c5cae9 );\r\n\r\nconst Pointword = styled.div`\r\n  font-size:18px;\r\n  font-weight:bold;\r\n`;\r\n\r\nconst ExitPopover = styled(Popover)`\r\n  text-align: center;\r\n`\r\n\r\nconst MyPagePresenter = ({takeNewNickname, submitNewNickname, takeOldPassword, takeNewPassword, submitNewPassword, takeWithdrawPassword, submitWithdraw, myReviews}) => {\r\n  const user = store.getState().user;\r\n\r\n  const popover = (\r\n    <ExitPopover id=\"popover-basic\">\r\n      <ExitPopover.Body>\r\n        아래의 버튼을 클릭할 시, 계정 정보가 사라지게 됩니다.<br/>\r\n        <br/>\r\n        <b>정말로 탈퇴하시겠습니까?</b><br/>\r\n        <br/>\r\n        <Button onClick={submitWithdraw}>탈퇴하기</Button>\r\n      </ExitPopover.Body>\r\n    </ExitPopover>\r\n    );\r\n\r\n  return (\r\n    <AllThing>\r\n    <Wrapper>        \r\n        <MainTitle><h1>마이페이지</h1></MainTitle>\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n          <Row>\r\n            <Col sm={3}>\r\n              <Nav variant=\"pills\" className=\"flex-column\">\r\n                <MyTab>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"first\">회원정보 수정</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"second\">내가 쓴 리뷰</Nav.Link>\r\n                  </Nav.Item>\r\n                </MyTab>\r\n              </Nav>\r\n            </Col>\r\n            <Col sm={9}>\r\n              <Tab.Content>\r\n                <Tab.Pane eventkey=\"zero\">\r\n                  <HJLayout>\r\n\r\n                  </HJLayout>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"first\">\r\n                  <NicknameLayout>\r\n                    <SubTitle><p>프로필 수정</p></SubTitle>\r\n                      <LeftLayout>\r\n                        <Pointword><p>닉네임 변경</p></Pointword>\r\n                        <p>현재 닉네임 : {user.nickname}</p>\r\n                      <SideBySide1>\r\n                        <AllInput onChange={takeNewNickname} placeholder=\"새 닉네임 입력\"></AllInput>\r\n                        <AllButton button onClick={submitNewNickname}>변경</AllButton>\r\n                      </SideBySide1>\r\n                      </LeftLayout>\r\n                    </NicknameLayout>\r\n                    \r\n                    <PasswordLayout>\r\n                    <SubTitle><p>비밀번호 변경</p></SubTitle>\r\n                      <LeftLayout>\r\n                        {/* <p>비밀번호 변경</p> */}\r\n                      <SideBySide2>\r\n                        <AllInput input type='password' onChange={takeOldPassword} placeholder=\"현재 비밀번호 입력\"></AllInput><br/>\r\n                        <AllInput input type='password' onChange={takeNewPassword} placeholder=\"새 비밀번호 입력\"></AllInput>\r\n                        <AllButton button onClick={submitNewPassword}>변경</AllButton>\r\n                      </SideBySide2>\r\n                      </LeftLayout>\r\n                    </PasswordLayout>\r\n                    <DeleteLayout>\r\n                      <SubTitle><p>계정 탈퇴</p></SubTitle>\r\n                        <LeftLayout>\r\n                            <p>탈퇴할 경우 사용하고 계신 아이디({user.user_id})는 재사용 및 복구가 불가능합니다.</p>\r\n                            \r\n                            <SideBySide3>\r\n                              <AllInput input type='password' onChange={takeWithdrawPassword} placeholder=\"현재 비밀번호 입력\"></AllInput>\r\n                              <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover}>\r\n                                <WarningButton variant=\"success\">퇴장</WarningButton>\r\n                              </OverlayTrigger>\r\n                            </SideBySide3>\r\n                        </LeftLayout>\r\n                      </DeleteLayout>\r\n\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"second\">\r\n                  <MyReviewLayout>\r\n                    <SubTitle><p>내가 쓴 리뷰</p></SubTitle>\r\n                    {!(myReviews.length === 0) ? (<>\r\n                      {myReviews.slice(0).reverse().map((review) => ( \r\n                        <Review>\r\n                          <Table key={review.review_id}>\r\n                            <Title>\r\n                              <Link to={`/Detail?code=${review.movieCd}`}>{review.movieTitle}</Link><br/> \r\n                            </Title>\r\n                            <Rate>\r\n                              <StarRatingComponent \r\n                                name=\"rate2\" \r\n                                editing={false}\r\n                                starCount={5}\r\n                                value={review.rate}\r\n                              />\r\n                            </Rate>\r\n                            <Contents>\r\n                              {review.contents}<br/>\r\n                            </Contents>\r\n                            <Info>\r\n                              <i>{moment(review.created).format('YYYY-MM-DD')} 작성</i>\r\n                            </Info>\r\n                          </Table>\r\n                        </Review>\r\n                    ))}</>) : (<>\r\n                      <p>작성한 리뷰가 없습니다.</p>\r\n                    </>)}\r\n                    \r\n                  </MyReviewLayout>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n    </Wrapper>\r\n    </AllThing>\r\n  )\r\n}\r\n\r\nexport default MyPagePresenter;","import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react';\r\nimport store from \"../store\";\r\nimport MyPagePresenter from './Presenters/MyPagePresenter.js';\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nconst MyPage = () => {\r\n  const [newNickname, setNewNickname] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [withdrawPassword, setWithdrawPassword] = useState('');\r\n  const [myReviews, setMyReviews] = useState([]);\r\n\r\n  const takeNewNickname = (e) => {\r\n    setNewNickname(e.target.value);\r\n  }\r\n\r\n  const submitNewNickname = async () => {\r\n    const nickname = newNickname;\r\n\r\n    if (nickname === store.getState().user.nickname) {\r\n      swal(\"현재 닉네임과 동일한 닉네임입니다.\")\r\n    }\r\n    else {\r\n      await axios.patch(`${process.env.REACT_APP_SERVER_URL}/mypage/nickname`, { nickname }, { withCredentials: true })\r\n      .then((response) => {\r\n        if (response.data.code === 400) {\r\n          swal(\"해당 닉네임이 이미 존재합니다.\");\r\n        }\r\n        else if (response.data.code === 200) {\r\n          swal(\"닉네임이 정상적으로 변경되었습니다.\\n\\n잠시 후 업데이트됩니다...\");\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 2000)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        swal(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  const takeNewPassword = async (e) => {\r\n    setNewPassword(e.target.value);\r\n  }\r\n  const takeOldPassword = async (e) => {\r\n    setOldPassword(e.target.value);\r\n  }\r\n\r\n  const submitNewPassword = async () => {\r\n    await axios.patch(`${process.env.REACT_APP_SERVER_URL}/mypage/password`, { oldPassword, newPassword }, { withCredentials: true })\r\n    .then((response) => {\r\n      swal(\"비밀번호가 정상적으로 변경되었습니다.\\n\\n잠시 후 업데이트됩니다...\");\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 2000)\r\n    })\r\n    .catch((error) => {\r\n      swal(error.response.data.message);\r\n    });\r\n  }\r\n\r\n  const takeWithdrawPassword = async (e) => {\r\n    setWithdrawPassword(e.target.value);\r\n  }\r\n\r\n  const submitWithdraw = async () => {\r\n    const pw = withdrawPassword;\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/mypage/withdraw`, { pw }, { withCredentials: true })\r\n    .then((response) => {\r\n      swal(\"탈퇴가 정상적으로 진행되었습니다.\");\r\n      setTimeout(() => {\r\n        window.location.href = \"/\";\r\n      }, 2000)\r\n    })\r\n    .catch((error) => {\r\n      swal(error.response.data.message);\r\n    });\r\n  }\r\n\r\n  const getMyReviews = async() => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/mypage/myReview`, { withCredentials:true })\r\n    .then((response) => {\r\n      setMyReviews(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      window.alert(error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => getMyReviews(), []);\r\n\r\n  return (\r\n    <MyPagePresenter takeNewNickname={takeNewNickname} submitNewNickname={submitNewNickname} takeNewPassword={takeNewPassword} takeOldPassword={takeOldPassword} submitNewPassword={submitNewPassword} takeWithdrawPassword={takeWithdrawPassword} submitWithdraw={submitWithdraw} myReviews={myReviews}/>\r\n  )\r\n}\r\n\r\nexport default MyPage;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\n//unused Page\r\n\r\nconst MovieCard = styled.div`\r\n  padding : 15px;\r\n  class: \"card bg-primary mb-3\";\r\n  margin: 20px auto 20px auto;\r\n  width: 700px;\r\n  height: 245px;\r\n  display: block;\r\n  background-color: #E2E1FF;\r\n  box-shadow: 1px 2px 2px gray;\r\n  border-radius: 0.3em;\r\n  font-family: 나눔고딕;\r\n`;\r\n\r\nconst MovieImageLink = styled.div`\r\n  class: \"card-img-top\";\r\n  float: left;\r\n  margin: auto;\r\n`;\r\n\r\nconst MovieImage = styled.img`\r\n  overflow: hidden;\r\n  width: 150px;\r\n  height: 215px;\r\n`;\r\n\r\nconst MovieTitleLink = styled(Link)`\r\n  text-decoration: none;\r\n  font-size: 20px;\r\n  color: black;\r\n`;\r\n\r\nconst MovieContent = styled.p`\r\n  class: \"card-body\";\r\n  float:right;\r\n  margin:auto;\r\n  width : 500px;\r\n  text-align: left;\r\n  size: 20px;\r\n  dispaly:flex;\r\n  color: black;\r\n`;\r\n\r\nconst MovieSummary = styled.p`\r\n  margin-top: 2px;\r\n  text-align: left;\r\n  color: black;\r\n  width : 500px;\r\n  overflow: hidden; text-overflow: ellipsis;\r\n  display: -webkit-box; \r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical; \r\n  word-wrap:break-word;\r\n  line-height: 1.5em;\r\n  height: 7.5em;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst SummaryLink = styled(Link)`\r\n  height: 1.5em;\r\n  position: relative;\r\n  left:450px;\r\n`;\r\n\r\n\r\nconst GenrePresenter = ({result}) => {\r\n  return (\r\n    <div>\r\n      {result.map((movie) => ( \r\n          <MovieCard key={movie.movieCd}>\r\n            <MovieImageLink>\r\n              <Link to={`/Detail?code=${movie.code}`}><MovieImage alt={movie.title} src={movie.image} onerror=\"this.src='image.png'\"></MovieImage></Link>\r\n            </MovieImageLink>\r\n            <MovieContent>\r\n              <MovieTitleLink to={`/Detail?code=${movie.code}`}>{movie.title}</MovieTitleLink> \r\n              <p>평점 {movie.rate}\r\n              {movie.date}</p>\r\n              <MovieSummary>\r\n                {movie.summary} \r\n              </MovieSummary>\r\n              <SummaryLink to={`/Detail?code=${movie.code}`}>더 보기</SummaryLink>\r\n            </MovieContent>\r\n          </MovieCard>\r\n          ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenrePresenter;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport GenrePresenter from './Presenters/GenrePresenter';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\n//unused page\r\n\r\nconst Genre = () => {\r\n  const [result, setResult] = useState([[]]);\r\n  const location = useLocation();\r\n\r\n  const genreSearch = async (e) => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/search${location.pathname}`)\r\n    .then((response) => {\r\n      setResult(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      window.alert(error);\r\n    });\r\n  }\r\n  useEffect(() => genreSearch(), []);\r\n\r\n  return ( \r\n    <GenrePresenter result={result}/>\r\n  )\r\n}\r\n\r\nexport default Genre;","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport {Tooltip} from 'antd';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport \"../../App.css\";\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nconst Recomm = styled.div`\r\n  padding-top: 40px;\r\n  padding-bottom: 40px;\r\n  min-height: 900px;\r\n`;\r\n\r\nconst SearchMovieModal = styled(Modal)`\r\n`\r\n\r\nconst SearchInput = styled.input`\r\n  height: 50px;\r\n  width : 510px;\r\n  margin-left: 125px;\r\n  margin-top : 5px;\r\n  font-size: 20px;\r\n  transition: border 0.1s ease-in-out;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 2px solid #6799ff;\r\n  }\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst HelpImage = styled.img`\r\n  helght: 50px;\r\n  width: 50px;\r\n  position: relative;\r\n  bottom: 5px;\r\n  left: 30px;\r\n`\r\n\r\nconst SelectMovieLine = styled.div`\r\n  display: float;\r\n  margin: auto;\r\n  margin-top : 20px;\r\n  padding-bottom : 110px;\r\n  width: 92%;\r\n  max-width: 800px;\r\n  border-radius: 10px;\r\n  background : #E2E1FF;\r\n`\r\nconst SelectMovieCard = styled.div`\r\n  max-width: 80px;\r\n  max-height: 100px;\r\n  display:grid;\r\n  grid-template-rows: 3fr 1fr;\r\n  margin: auto;\r\n  position: relative;\r\n  top: 20px;\r\n`\r\n\r\nconst SelectTitle = styled.div`\r\n  text-align: center;\r\n  font-family: \"Jua\";\r\n  font-weight: 100;\r\n  color: black;\r\n  hover {\r\n    text-decoration: underline;\r\n  }\r\n  active {\r\n    text-decoration: underline;\r\n  }\r\n  padding-top: 4px;\r\n  font-size: 15px;\r\n  overflow: hidden; text-overflow: ellipsis;\r\n  display: -webkit-box; \r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical; \r\n  word-wrap:break-word;\r\n  line-height: 1.5em;\r\n  height: 3em;\r\n  \r\n`\r\n\r\nconst SelectAsk = styled.h2`\r\n  margin: auto;\r\n  height: 100px;\r\n  position: relative;\r\n  top: 60px;\r\n  padding-top: 30px;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 10px;\r\n  background : #E2E1FF;\r\n`\r\n\r\nconst SearchMovieList = styled(Modal.Body)`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n\r\n`;\r\n\r\nconst MovieCard = styled.div`\r\n  class: \"card bg-primary mb-3\";\r\n  margin: 5px auto 20px auto;\r\n  display: grid;\r\n  width: 360px;\r\n  height: 129px;\r\n  grid-template-columns: 1fr 2fr;\r\n  font-family: 고딕;\r\n`;\r\n\r\nconst MovieImageLink = styled.div`\r\n  class: \"card-img-top\";\r\n  margin: auto;\r\n`;\r\n\r\nconst MovieImage = styled.img`\r\n  overflow: hidden;\r\n  width: 90px;\r\n  height: 129px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst SelectMovieImage = styled(MovieImage)`\r\n  cursor: pointer;\r\n  &:hover {\r\n    transition: 0.2s all;\r\n    filter: brightness(70%);\r\n  }\r\n`\r\n\r\nconst MovieContent = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 2fr 1fr;\r\n  text-decoration: none;\r\n  font-size: 21px;\r\n  color: black;\r\n`;\r\n\r\nconst RecommContent = styled.div`\r\n  margin-top:10px;\r\n  text-decoration: none;\r\n  font-size: 21px;\r\n  color: black;\r\n`;\r\n\r\nconst RecommLink = styled(Link)`\r\n  text-decoration: none;\r\n  font-size: 24px;\r\n  color: black;\r\n`\r\n\r\nconst ModalButtonDiv = styled.div`\r\n  padding-right: 20px;\r\n  display: block;\r\n`\r\n\r\nconst SelectButton = styled.button`\r\n  background-color: #7D79FF;\r\n  color : white;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  transition: .2s all;\r\n  font-weight: 100;\r\n  font-family: 'Jua', sans-serif;\r\n  border-radius: 5px;\r\n  border-color: white;\r\n  &:hover {\r\n      background: white;\r\n      color: #6b66ff;\r\n  }\r\n`;\r\n\r\nconst CreateButton = styled(SelectButton)`\r\n  margin: auto;\r\n  margin-top : 20px;\r\n  font-size: 20px;\r\n  font-weight: 100;\r\n  height: 50px;\r\n  position: relative;\r\n  left: 30px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`\r\n\r\nconst MovieTitle = styled(Link)`\r\n  color: black;\r\n`\r\n\r\nconst SwipeDiv = styled.div`\r\n  padding-top: 25px;\r\n`;\r\n\r\nconst RecommTitle = styled.div`\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  font-family: 'Nanum Gothic', sans-serif;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst SwipePad = styled.div`\r\n    padding-left: 100px;\r\n    padding-right: 100px;\r\n`;\r\n\r\nconst NoMovieDiv = styled.div`\r\n  padding : 180px;\r\n  height : 100px;\r\n  font-size: 20px;\r\n  margin-top : 10px;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst RecommPresenter = ({submitSearch, takeInput, result, currentSearch, selectMovie, deleteMovie, confirmMovie, recommendMovieList, selectedMovies, selectedMovieList}) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n\r\n  const handleConfirm = () => {\r\n    if (selectedMovies.length === 0)\r\n      swal(\"하나 이상의 영화를 선택해주세요!\")\r\n    else {\r\n      confirmMovie();\r\n      setShow(false);\r\n    }\r\n  }\r\n\r\n  const handleShow = () => {\r\n\r\n    setShow(true);\r\n  }\r\n\r\n  for (let i = 0 ; i < result.length; i++) {\r\n    result[i].title = result[i].title.replace(/<b>/igm, '');\r\n    result[i].title = result[i].title.replace(/<\\/b>/igm, '');\r\n    if (result[i].date === '정보 없음')\r\n      result[i].date = \"개봉일 정보 없음\";\r\n    if (result[i].summary === \"\")\r\n      result[i].summary = \"\";\r\n  }\r\n\r\n  return (\r\n    <Recomm>\r\n      <SearchMovieModal show={show} onHide={handleClose} size=\"lg\">\r\n        <SearchMovieModal.Header>\r\n          <Modal.Title>영화 목록 선택</Modal.Title>\r\n        </SearchMovieModal.Header>\r\n        <SearchMovieModal.Body>\r\n          <SearchInput type=\"text\" onChange={takeInput} onKeyPress={submitSearch} placeholder=\"제목으로 영화 찾기\"></SearchInput>\r\n          <Tooltip title=\"선택한 영화의 포스터를 눌러 선택을 취소할 수 있습니다.\">\r\n            <HelpImage src=\"question.png\"></HelpImage>\r\n          </Tooltip>\r\n          <SelectMovieLine>\r\n            {!(selectedMovies.length === 0) ? (<>\r\n              {selectedMovies.map((movie) => ( \r\n                <SelectMovieCard key={movie.movieCd}>\r\n                  <SelectMovieImage onClick={deleteMovie} value={movie.movieCd} alt=\"movie\" src={movie.image} onerror=\"this.src='image.png'\"></SelectMovieImage> \r\n                  <SelectTitle to={`/Detail?code=${movie.movieCd}`}>{movie.title}</SelectTitle>\r\n                </SelectMovieCard>\r\n              ))}</>) : (\r\n            <>\r\n            {/* 아무것도 검색되지 않았을 때의 표시 공간 */}\r\n              <SelectAsk>추천 영화를 선택하세요. (최대 5개)</SelectAsk>\r\n            </>)}\r\n          </SelectMovieLine>\r\n        </SearchMovieModal.Body>\r\n\r\n        <SearchMovieList>\r\n        {currentSearch ? (<>\r\n          {result.map((movie) => ( \r\n            <MovieCard key={movie.movieCd}>\r\n              <MovieImageLink>\r\n                <MovieImage alt=\"movie\" src={movie.image} onerror=\"this.src='image.png'\"></MovieImage>\r\n              </MovieImageLink>\r\n              <MovieContent> <MovieTitle to={`/Detail?code=${movie.movieCd}`}>{movie.title}</MovieTitle>\r\n                <ModalButtonDiv>\r\n                  <SelectButton value={movie.movieCd} onClick={selectMovie}>\r\n                    선택\r\n                  </SelectButton>\r\n                </ModalButtonDiv>\r\n              </MovieContent>              \r\n            </MovieCard>\r\n          ))}</>) : (\r\n        <>\r\n        {/* 아무것도 검색되지 않았을 때의 표시 공간 */}\r\n        </>)}\r\n        </SearchMovieList>\r\n\r\n        <SearchMovieModal.Footer>\r\n          <SelectButton variant=\"secondary\" onClick={handleClose}>\r\n            닫기\r\n          </SelectButton>\r\n          <SelectButton variant=\"primary\" onClick={handleConfirm}>\r\n            결정\r\n          </SelectButton>\r\n        </SearchMovieModal.Footer>\r\n      </SearchMovieModal>\r\n\r\n      <SelectMovieLine>\r\n        {(selectedMovieList) ? (<>\r\n          {selectedMovieList.map((movie) => ( \r\n            <SelectMovieCard key={movie.movieCd}>\r\n              <MovieImage alt=\"movie\" src={movie.image} onerror=\"this.src='image.png'\"></MovieImage> \r\n              <SelectTitle to={`/Detail?code=${movie.movieCd}`}><b>{movie.title}</b></SelectTitle>\r\n            </SelectMovieCard>\r\n          ))}</>) : (\r\n        <>\r\n        {/* 아무것도 검색되지 않았을 때의 표시 공간 */}\r\n          <SelectAsk>영화를 선택해, 비슷한 영화를 찾아보세요!</SelectAsk>\r\n        </>)}\r\n        \r\n      </SelectMovieLine>\r\n      <CreateButton variant=\"primary\" onClick={handleShow}>\r\n        추천 영화 목록 만들기\r\n      </CreateButton>\r\n      <Tooltip title=\"선택한 영화의 줄거리를 참고해, 유사한 영화를 제공합니다.\">\r\n        <HelpImage src=\"question.png\"></HelpImage>\r\n      </Tooltip>\r\n\r\n      <SwipeDiv>\r\n        <RecommTitle>추천 영화</RecommTitle>\r\n        {(recommendMovieList) ? (\r\n        <SwipePad>\r\n          <Swiper\r\n            className=\"banner\"\r\n            spaceBetween={10}\r\n            slidesPerView={(recommendMovieList.length < 5) ? recommendMovieList.length : 5}\r\n            slidesPerGroup={5}\r\n            navigation\r\n            pagination={{ clickable: true }} \r\n          >\r\n            {recommendMovieList && recommendMovieList.map((movie) => ( \r\n            <SwiperSlide key={movie.movieCode}> \r\n              <Link to={`/Detail?code=${movie.movieCode}`}>\r\n                <img style={{ width:'199px', height:'auto'}} src={movie.image} alt={movie.title}></img>\r\n              </Link>\r\n              <RecommContent> \r\n                <RecommLink to={`/Detail?code=${movie.movieCode}`}><b>{movie.title}</b></RecommLink>\r\n              </RecommContent> \r\n            </SwiperSlide>\r\n            ))}\r\n            <br/>\r\n            <br/>\r\n          </Swiper>   \r\n        </SwipePad>) : (<SwipePad>\r\n          <SwiperSlide>\r\n            <NoMovieDiv>집계된 데이터가 없습니다.</NoMovieDiv>\r\n          </SwiperSlide>\r\n        </SwipePad>)}\r\n      </SwipeDiv>\r\n        \r\n      \r\n    </Recomm>\r\n  )\r\n}\r\n\r\nexport default RecommPresenter;","import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport RecommPresenter from './Presenters/RecommPresenter.js'\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nconst Recomm = () => {\r\n  const [searchContent, setSearchContent] = useState('');\r\n  let [result, setResult] = useState([]);\r\n  const [currentSearch, setCurrentSearch] = useState('');\r\n  const props = {searchContent, result, currentSearch};\r\n\r\n  const submitSearch = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (searchContent === '') { // 아무것도 입력하지 않을 시\r\n        setCurrentSearch(searchContent);\r\n        return; // 아무것도 반환하지 않음\r\n      }\r\n      const check = 1;\r\n      const movieNm = searchContent;\r\n      await axios.post(`${process.env.REACT_APP_SERVER_URL}/search`, { check, movieNm })\r\n      .then((response) => {\r\n        if (response.status === 204)\r\n          setResult([]);\r\n        else\r\n          setResult(response.data.result);\r\n      })\r\n      .catch((error) => {\r\n        swal(error.response.data.message);\r\n      });\r\n      setCurrentSearch(searchContent);\r\n    }\r\n  }\r\n  \r\n  const takeInput = (e) => {\r\n    setSearchContent(e.target.value);\r\n  }\r\n  \r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const selectMovie = async (e) => {\r\n    if (movieList.length < 5)\r\n      if (!movieList.includes(e.target.value))\r\n        setMovieList(movieList => [...movieList, e.target.value]);\r\n  }\r\n\r\n  const deleteMovie = async (e) => {\r\n    if (movieList.length === 1)\r\n      setMovieList([]);\r\n    else {\r\n      setMovieList(movieList.filter((movie) => movie !== e.target.getAttribute(\"value\")));\r\n    }\r\n    \r\n  }\r\n\r\n  const confirmMovie = async () => {\r\n    if (movieList.length === 0)\r\n      swal(\"하나 이상의 영화를 선택해주세요.\");\r\n    else {\r\n      await axios.post(`${process.env.REACT_APP_SERVER_URL}/personalrcm`, { movieList }, {withCredentials : true})\r\n      .then((response) => {\r\n        swal(\"아래에서 추천 영화를 확인하세요!\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    \r\n      await showRecommendMovies();\r\n      await getSelectedMovies();\r\n      setMovieList([]);\r\n      setSelectedMovies([]);\r\n    }\r\n  }\r\n\r\n  const [recommendMovieList, setRecommendMovieList] = useState([]);\r\n\r\n  const showRecommendMovies = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/personalrcm`, {withCredentials : true})\r\n    .then((response) => {\r\n      if (response.status === 204) {\r\n        setRecommendMovieList(undefined);\r\n      }\r\n      else\r\n        setRecommendMovieList(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  const [selectedMovies, setSelectedMovies] = useState([]);\r\n  \r\n  const showSelectedMovies = async () => {\r\n    if (movieList.length === 0)\r\n      setSelectedMovies([]);\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/personalrcm/usermovie`, {movieList}, {withCredentials : true})\r\n    .then((response) => {    \r\n      if (response.data.result===\"먼저 영화를 선택해주세요.\")\r\n        setSelectedMovies([]);\r\n      else\r\n        setSelectedMovies(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  const [selectedMovieList, setSelectedMovieList] = useState([]);\r\n\r\n  const getSelectedMovies = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/personalrcm/usermovies`, {withCredentials : true})\r\n    .then((response) => {\r\n      setSelectedMovieList(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n  \r\n  useEffect(() => showRecommendMovies(), []);\r\n  useEffect(() => showSelectedMovies(), [movieList]);\r\n  useEffect(() => getSelectedMovies(), [movieList]);\r\n\r\n  return (\r\n    <RecommPresenter submitSearch={submitSearch} takeInput={takeInput} selectMovie={selectMovie} deleteMovie={deleteMovie} confirmMovie={confirmMovie} recommendMovieList={recommendMovieList} selectedMovies={selectedMovies} selectedMovieList={selectedMovieList} {...props}/>\r\n  )\r\n}\r\n\r\nexport default Recomm;","import React, {useState, optionsState} from \"react\";\r\nimport {Modal, Dropdown} from \"react-bootstrap\";\r\nimport {Tabs, TabList, Tab, TabPanel} from \"react-tabs\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\n\r\nconst STabs = styled(Tabs)`\r\n  font-family: 'Jua', sans-serif;\r\n`;\r\n\r\n\r\nconst STabList = styled(TabList)`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  list-style-type: none;\r\n  padding: 5px;\r\n\r\n  width: 900px;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst STab = styled(Tab)`\r\n  font-size: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  background: #E2E1FF;\r\n\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n\r\n  border-style: solid;\r\n  border-width : 0 0 3px 0;\r\n  border-bottom-color: #595959;  \r\n  border-radius : 15px 0 0 15px ;\r\n\r\n  \r\n  &.is-selected {\r\n    background: #B4B1FF;\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 2px rgba(0, 0, 255, 0.5);\r\n  }\r\n  &:hover {\r\n    box-shadow: 0 0 0 2px rgba(133, 133, 133, 0.5);\r\n  }\r\n  \r\n  &active {\r\n    background-color: #B4B1FF;\r\n  }\r\n`;\r\n\r\nconst STab2 = styled(STab)`\r\n  border-radius : 0 15px 15px 0 ;\r\n  display: block;\r\n  padding-left: 20px;\r\n  text-align: left;\r\n`\r\n\r\nconst STabPanel = styled(TabPanel)`\r\n  display: none;\r\n\r\n  &.is-selected {\r\n    display: block;\r\n  }\r\n\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: #7D79FF;\r\n  color : white;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  transition: .2s all;\r\n  font-weight: 100;\r\n  font-family: 'Jua', sans-serif;\r\n  border-radius: 5px;\r\n  border-color: white;\r\n  &:hover {\r\n      background: white;\r\n      color: #6b66ff;\r\n  }\r\n`;\r\n\r\nconst WriteButton = styled.button`\r\n  position: fixed;\r\n  bottom: 90px;\r\n  right: 70px; \r\n  background: transparent;\r\n  border: 0;\r\n`\r\n\r\nconst WriteImage = styled.img`\r\n  width: 100px;\r\n`\r\n\r\nconst OttSelect = styled.select`\r\n  width : 200px;\r\n  height : 50px;\r\n  font-size: 17px;\r\n  margin-top : 5px;\r\n  padding-left: 3px;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 1px solid #6799ff;\r\n  }\r\n`;\r\n\r\nconst OttOption = styled.option`\r\n`;\r\n\r\nconst OttPage = styled.div`\r\n  min-height: 900px;\r\n  width: 1000px;\r\n  margin: auto;\r\n`\r\n\r\nconst OttRoomListDiv = styled.div`\r\n  width : 840px;\r\n  margin: auto;\r\n  padding-top: 10px;\r\n  font-weight: 100;\r\n  font-family: 'Jua', sans-serif;\r\n  padding-bottom:10px;\r\n  margin-bottom: 10px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`\r\nconst OttRoom = styled.div`\r\n  background : white;\r\n  font-size: 18px;\r\n  text-align: center;\r\n\r\n  width: 90%;\r\n  margin: auto;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  padding-bottom: 10px;\r\n  padding-top: 15px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n\r\n  border-style: solid;\r\n  border-width : 1px 1px 3px 1px;\r\n  border-radius : 7px;\r\n  border-color: #595959;\r\n`\r\n\r\nconst OttRoomTitle = styled.div`\r\n  display: -webkit-box; \r\n  -webkit-line-clamp: 1;\r\n  -webkit-box-orient: vertical; \r\n  word-wrap:break-word;\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  height: 20px;\r\n  margin-bottom: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst OttRoomContent = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(2, 1fr);\r\n  grid-template-columns: repeat(2, 1fr);\r\n`;\r\n\r\nconst OttRoomElement = styled.div`\r\n  border-width: 0 0 1px 0;\r\n  border-style : solid;\r\n  border-color : gray;\r\n  border-radius: 8px;\r\n  margin: 5px;\r\n`\r\n\r\nconst MyRoomListDiv = styled(OttRoomListDiv)`\r\n`\r\n\r\nconst MyRoom = styled(OttRoom)`\r\n  background-color: white;\r\n`\r\n\r\nconst NoRoomListDiv = styled(MyRoomListDiv)`\r\n  display: flex;\r\n  font-size: 24px;\r\n  justify-content: center;\r\n  padding-top : 120px;\r\n`\r\n\r\nconst StyledDropdown = styled(Dropdown)`\r\n  margin-right: 20px;\r\n  position: relative;\r\n  bottom: 4px;\r\n`\r\n\r\nconst StyledDropdownToggle = styled(Dropdown.Toggle)`\r\n  background: white;\r\n  color: black;\r\n  border: none;\r\n  width: 100px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background: white;\r\n    color: black;\r\n    box-shadow: 0 0 0 2px rgba(133, 133, 133, 0.5);\r\n  }\r\n\r\n  &.active {\r\n    background: white;\r\n    box-shadow: 0 0 0 2px rgba(133, 133, 133, 0.5);\r\n  }\r\n`\r\n\r\nconst ClassIcon = styled.img`\r\n  margin-right : 10px;\r\n  position: relative;\r\n  bottom: 4px;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  padding-left: 26px;\r\n  padding-right: 30px;\r\n`\r\nconst Input = styled.input`\r\n  padding: 0px 10px;\r\n  font-size: 15px;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 3px;\r\n  transition: border 0.1s ease-in-out;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 2px solid #6799ff;\r\n  }\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n  font-size:20px;\r\n  display: block;\r\n`\r\n\r\nconst InputDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin-top : 10px;\r\n`\r\n\r\nconst UnitInput = styled(Input)`\r\n  width: 40%;\r\n  ::-webkit-inner-spin-button,\r\n  ::-webkit-outer-spin-button {\r\n    -webkit-appearance: none; \r\n  }\r\n  text-align: right;\r\n`\r\n\r\nconst InputTitle = styled.div`\r\n  font-size: 24px;\r\n  margin-top: 14px;\r\n  font-weight: 600;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nconst UnitLabel = styled.label`\r\n  font-size:20px;\r\n  padding-left : 10px;\r\n`\r\n\r\nconst UnitDiv = styled.div`\r\n  text-align: right;\r\n  padding-right: 10px;\r\n`\r\n\r\nconst OttListPresenter = ({classChange, titleChange, classificationChange, max_member_numChange, createRoom, enterRoom, translationPlatform, roomList, myRoomList, searchClass}) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n  \r\n  const handleConfirm = () => {\r\n    setShow(false);\r\n    createRoom();\r\n  }\r\n\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  }\r\n\r\n  return (    \r\n    <OttPage>\r\n      <STabs selectedTabClassName=\"is-selected\" selectedTabPanelClassName=\"is-selected\">\r\n        <STabList>\r\n          <STab>\r\n            <StyledDropdown onSelect={classChange}>\r\n              <StyledDropdownToggle variant=\"success\" id=\"dropdown-basic\">\r\n                {searchClass ? translationPlatform(searchClass) : \"플랫폼 선택\"}\r\n              </StyledDropdownToggle>\r\n              <StyledDropdown.Menu>\r\n                <StyledDropdown.Item eventKey=\"all\"> 전체</StyledDropdown.Item>\r\n                <StyledDropdown.Item eventKey=\"netflix\"> 넷플릭스</StyledDropdown.Item>\r\n                <StyledDropdown.Item eventKey=\"watcha\"> 왓챠</StyledDropdown.Item>\r\n                <StyledDropdown.Item eventKey=\"tving\"> 티빙</StyledDropdown.Item>\r\n                <StyledDropdown.Item eventKey=\"wave\"> 웨이브</StyledDropdown.Item>\r\n                <StyledDropdown.Item eventKey=\"etc\"> 기타</StyledDropdown.Item>\r\n              </StyledDropdown.Menu>\r\n            </StyledDropdown>\r\n            참여할 수 있는 그룹 목록\r\n          </STab>\r\n          <STab2>참여한 그룹 목록</STab2>\r\n        </STabList>\r\n\r\n        <STabPanel>\r\n        \r\n          {(roomList.length !== 0) ? \r\n            <OttRoomListDiv>\r\n              {roomList && roomList.slice(0).reverse().map((room) => ( \r\n              <OttRoom key={room.group_id}>\r\n                <OttRoomTitle>{room.title}</OttRoomTitle>\r\n                <OttRoomContent>\r\n                  <OttRoomElement><ClassIcon height=\"20px\" src={`./${room.classification}.png`}/> {translationPlatform(room.classification)}</OttRoomElement>\r\n                  <OttRoomElement>{room.current_count} / {room.max_member_num}인</OttRoomElement>\r\n                  <OttRoomElement>{moment(room.created).format('YYYY-MM-DD')}</OttRoomElement>\r\n                  {room.total_money ? <OttRoomElement> {room.total_money} 원</OttRoomElement> : <OttRoomElement>금액 미정</OttRoomElement>}\r\n                </OttRoomContent>\r\n                <StyledButton onClick={enterRoom} value={room.group_id}>ENTER</StyledButton>\r\n              </OttRoom>\r\n              ))} \r\n            </OttRoomListDiv>: <NoRoomListDiv>\r\n              현재 생성된 그룹이 없습니다.<br/><br/>새로운 그룹을 만들어보세요!\r\n          </NoRoomListDiv>}\r\n          \r\n        </STabPanel>\r\n\r\n        <STabPanel>\r\n          {(myRoomList.length !== 0) ? \r\n            <MyRoomListDiv>\r\n              {myRoomList && myRoomList.slice(0).reverse().map((room) => ( \r\n                <MyRoom key={room.group_id}>\r\n                  <OttRoomTitle>{room.title}</OttRoomTitle>\r\n                  <OttRoomContent>\r\n                    <OttRoomElement><ClassIcon height=\"20px\" src={`./${room.classification}.png`}/> {translationPlatform(room.classification)}</OttRoomElement>\r\n                    <OttRoomElement>{room.current_count} / {room.max_member_num}인</OttRoomElement>\r\n                    <OttRoomElement>{moment(room.created).format('YYYY-MM-DD')}</OttRoomElement>\r\n                    {room.total_money ? <OttRoomElement> {room.total_money} 원</OttRoomElement> : <OttRoomElement>금액 미정</OttRoomElement>}\r\n                  </OttRoomContent>\r\n                  <StyledButton onClick={enterRoom} value={room.group_id}>ENTER</StyledButton>\r\n                </MyRoom>\r\n                ))}\r\n            </MyRoomListDiv> : <NoRoomListDiv>\r\n              참여한 그룹이 없습니다.<br/><br/>다른 그룹에 참여하거나, 새로운 그룹을 만들어보세요!\r\n          </NoRoomListDiv>}\r\n        </STabPanel>\r\n      </STabs>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body> \r\n          <InputContainer>\r\n            <InputTitle>그룹 생성</InputTitle>\r\n            <InputLabel>그룹 제목</InputLabel>\r\n            <Input onChange={titleChange}></Input>\r\n            <InputDiv>\r\n              <div>\r\n                <InputLabel>그룹 OTT 플랫폼</InputLabel>\r\n                <OttSelect name=\"ott\" value={optionsState} onChange={classificationChange}>\r\n                  <OttOption value=\"netflix\">넷플릭스</OttOption>\r\n                  <OttOption value=\"watcha\"> 왓챠</OttOption>\r\n                  <OttOption value=\"tving\"> 티빙</OttOption>\r\n                  <OttOption value=\"wave\"> 웨이브</OttOption>\r\n                  <OttOption value=\"etc\"> 기타</OttOption>\r\n                </OttSelect>\r\n              </div>\r\n              <UnitDiv>\r\n                <InputLabel>그룹 최대 인원</InputLabel>\r\n                <UnitInput type=\"number\" pattern=\"[0-9]*\" onChange={max_member_numChange}/><UnitLabel> 명</UnitLabel>\r\n              </UnitDiv>\r\n            </InputDiv>\r\n            <p><br/>그룹을 만든 후, 수정을 통해 더 자세한 내용을 기입할 수 있습니다.</p>\r\n          </InputContainer>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <StyledButton variant=\"secondary\" onClick={handleClose}>\r\n            닫기\r\n          </StyledButton>\r\n          <StyledButton variant=\"primary\" onClick={handleConfirm}>\r\n            생성\r\n          </StyledButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <WriteButton>\r\n        <WriteImage src=\"./write.png\" onClick={handleShow}/>\r\n      </WriteButton>\r\n\r\n    </OttPage>\r\n  )\r\n}\r\n\r\nexport default OttListPresenter;","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {Modal, Popover, OverlayTrigger, Button} from \"react-bootstrap\";\r\nimport {Comment, Tooltip} from 'antd';\r\nimport moment from \"moment\";\r\nimport store from '../../store';\r\n\r\nconst OttPage = styled.div`\r\n  min-height: 900px;\r\n  display: grid;\r\n`\r\n\r\nconst TitleDiv = styled.h2`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst ContentTitle = styled(TitleDiv)`\r\n  font-size : 36px;\r\n  border-bottom: 1px solid gray;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  padding-bottom: 5px;\r\n  overflow: visible;\r\n`\r\n\r\nconst OttDiv = styled.div`\r\n  width : 1150px;\r\n  height : 600px;\r\n  display: grid;\r\n  grid-template-columns: 2fr 4fr 1fr; \r\n  margin: auto;\r\n  margin-top: 20px;\r\n`\r\n\r\nconst MembersDiv = styled.div`\r\n  font-family : \"Jua\";\r\n  display: block;\r\n\r\n  border-style: solid;\r\n  border-color : #6b66ff;\r\n  border-width: 3px;\r\n  border-bottom-width : 3px;\r\n  border-radius : 14px 14px;\r\n  border-bottom-color: #595959;\r\n  background: white;\r\n\r\n`\r\n\r\nconst MemberDiv = styled.div`\r\n  background : white;\r\n  font-size: 28px;\r\n  text-align: left;\r\n\r\n  width: 80%;\r\n  height: 20%;\r\n\r\n  display: grid;\r\n  grid-templates-rows: 1fr 1fr;\r\n\r\n  margin: auto;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  padding-bottom: 10px;\r\n  padding-top: 15px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n\r\n  border-style: solid;\r\n  border-width : 1px 1px 3px 1px;\r\n  border-radius : 7px;\r\n  border-color: #595959;\r\n`\r\n\r\nconst MemberUpperDiv = styled.div`\r\n\r\n`\r\n\r\nconst MemberLowerDiv = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 100;\r\n  text-align: right;\r\n`\r\n\r\nconst Icon = styled.img`\r\n  height: 24px;\r\n  position: relative;\r\n  bottom: 3px;\r\n  margin-left: 5px;\r\n`\r\n\r\nconst ClassIcon = styled.img`\r\n  margin-right : 10px;\r\n  position: relative;\r\n  bottom: 4px;\r\n`\r\n\r\nconst ContentDiv = styled.div`\r\n  white-space: pre-line;\r\n  font-family: \"Jua\";\r\n  border-style: solid;\r\n  border-width : 3px 1px 2px 1px;\r\n  border-radius : 14px 14px;\r\n  border-color: #595959;\r\n  margin-right: 10px;\r\n  margin-left: 10px;\r\n`\r\n\r\nconst ContentLine1 = styled.div`\r\n  font-size: 20px;\r\n  display: grid;\r\n  grid-template-columns : 1fr 1fr;\r\n`;\r\n\r\nconst ContentElement1 = styled.div`\r\n  margin-top: 5px;\r\n  margin-left: 13px;\r\n  margin-right: 13px;\r\n\r\n  border-width: 0 0 1px 0;\r\n  border-style : solid;\r\n  border-color : gray;\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ContentLine2 = styled.div`\r\n  margin-top: 10px;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst ContentElement2 = styled.div`\r\n  font-size: 14px;\r\n  font-family: 맑은고딕;\r\n  \r\n  min-height: 60px;\r\n\r\n  padding-bottom: 10px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n\r\n  margin: auto;\r\n  margin-left: 13px;\r\n  margin-right: 13px;\r\n\r\n  border-width: 0 0 1px 0;\r\n  border-style : solid;\r\n  border-color : gray;\r\n  border-radius: 8px;\r\n\r\n  text-align: center;  \r\n`\r\n\r\n\r\nconst ContentLine3 = styled.div`\r\n  margin-top: 10px;\r\n  display: grid;\r\n  grid-template-columns : 1fr 1fr;\r\n`;\r\n\r\nconst ContentElement3 = styled(ContentElement1)`\r\n  border-width: 0 0 1px 0;\r\n  border-style : solid;\r\n  border-color : gray;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  text-align: left;\r\n  padding-left : 25px;\r\n  padding-bottom: 10px;\r\n`\r\n\r\nconst ContentTitle3 = styled.div`\r\n  text-align: center;\r\n  font-size: 25px;\r\n  position: relative;\r\n  right: 20px;\r\n`\r\n\r\nconst ContentLine4 = styled.div`\r\n  margin-top: 20px;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst ContentElement4 = styled.div`\r\n  font-size: 18px;\r\n  text-align: left;\r\n  padding-left: 235px;\r\n`\r\n\r\nconst ContentElement4_2 = styled.div`\r\n  font-size: 18px;\r\n`\r\n\r\nconst MenuDiv = styled(MembersDiv)`\r\n  display: grid;\r\n`\r\n\r\nconst MenuButton = styled(Link)`\r\n  background: white;\r\n  font-size: 17px;\r\n  width: 120px;\r\n  color: black;\r\n\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n\r\n  margin: auto;\r\n\r\n  position: relative;\r\n  bottom: 60px;\r\n\r\n  border-style: solid;\r\n  border-width : 1px 1px 3px 1px;\r\n  border-radius : 7px;\r\n  border-color: #595959;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  padding-left: 26px;\r\n  padding-right: 30px;\r\n`\r\nconst Input = styled.input`\r\n  padding: 0px 10px;\r\n  font-size: 15px;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 3px;\r\n  transition: border 0.1s ease-in-out;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 2px solid #6799ff;\r\n  }\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n  font-size:20px;\r\n  display: block;\r\n`\r\n\r\nconst NoticeInput = styled.textarea`\r\n  padding: 10px 10px;\r\n  font-size: 15px;\r\n  box-sizing: border-box;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 3px;\r\n  transition: border 0.1s ease-in-out;\r\n  outline: none;\r\n  &:hover,\r\n  &:focus {\r\n    border: 2px solid #6799ff;\r\n  }\r\n  height : 100px;\r\n  width: 100%;\r\n  text-overflow: auto;\r\n`\r\n\r\nconst InputDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin-top : 10px;\r\n`\r\n\r\nconst HalfInput = styled(Input)`\r\n  width: 95%;\r\n`\r\n\r\nconst UnitInput = styled(Input)`\r\n  width: 40%;\r\n  ::-webkit-inner-spin-button,\r\n  ::-webkit-outer-spin-button {\r\n    -webkit-appearance: none; \r\n  }\r\n  text-align: right;\r\n`\r\n\r\nconst InputTitle = styled.div`\r\n  font-size: 24px;\r\n  margin-top: 14px;\r\n  font-weight: 600;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nconst UnitLabel = styled.label`\r\n  font-size:20px;\r\n  padding-left : 10px;\r\n`\r\n\r\nconst UnitDiv = styled.div`\r\n  text-align: right;\r\n  padding-right: 10px;\r\n`\r\n\r\nconst SelectButton = styled.button`\r\n  background-color: #7D79FF;\r\n  color : white;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  transition: .2s all;\r\n  font-weight: 100;\r\n  font-family: 'Jua', sans-serif;\r\n  border-radius: 5px;\r\n  border-color: white;\r\n  &:hover {\r\n      background: white;\r\n      color: #6b66ff;\r\n  }\r\n`\r\nconst RemittanceDiv = styled.div`\r\n  item-align: center;\r\n  padding: auto;\r\n`\r\n\r\nconst Remittance = styled.div`\r\n  margin: auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  font-family: 'Jua', sans-serif; \r\n`\r\n\r\nconst CommentDeleteButton = styled.button`\r\n  color: white;\r\n  background-color: #6B66FF;\r\n  border-color: #6B66FF;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    box-shadow: 0 0 0 2px rgba(133, 133, 133, 0.5);\r\n  }\r\n`\r\n\r\nconst CommentContent = styled.div`\r\n  font-size: 15px;\r\n  text-align: left;\r\n`\r\nconst CommentDiv = styled.div`\r\n  width : 600px;\r\n  display: grid;\r\n  margin: auto;\r\n  margin-bottom: 4px;\r\n`\r\n\r\nconst Comment2 = styled(Comment)`\r\n  border-bottom: 1px solid black;\r\n`\r\n\r\nconst NonCommentDiv = styled(CommentDiv)`\r\n  border: none;\r\n  ;\r\n`\r\n\r\nconst CommentButton = styled.button`\r\n  font-weight: 600;\r\n  color: white;\r\n  border: 1px solid #6799FF;\r\n  padding: 0.5rem;\r\n  padding-bottom: 0.4rem;\r\n  margin-left:5px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  font-size:18px;\r\n  transition: .2s all;\r\n  background:#6B66FF;\r\n\r\n  &:hover {\r\n      background-color: white;\r\n      color: #6799FF;\r\n  }\r\n`;\r\n\r\nconst CommentForm = styled.form`\r\n  width: 600px;\r\n  margin: auto;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst ExitButton = styled(Button)`\r\n  background: white;\r\n  font-size: 17px;\r\n  width: 120px;\r\n  color: black;\r\n\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n\r\n  margin: auto;\r\n\r\n  position: relative;\r\n  bottom: 60px;\r\n\r\n  border-style: solid;\r\n  border-width : 1px 1px 3px 1px;\r\n  border-radius : 7px;\r\n  border-color: #595959;\r\n\r\n  &:hover {\r\n    color: #3FA6FB;\r\n    background: white;\r\n  }\r\n\r\n  &:focus {\r\n    color: black;\r\n    background: white;\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst ExitPopover = styled(Popover)`\r\n  text-align: center;\r\n`\r\n\r\nconst OttRoomPresenter = ( {groupDetail, exitRoom, translationPlatform, remittances, detailTitleChange, noticeChange, accountChange, ott_idChange, ott_pwdChange, termChange, start_dateChange, newMoneyChange, commentsChange, patchDetail, checkMemberRemittance, sendRemittanceDone, setMemberRemittance, writeOnClick, deleteOnClick, getRoomDetail} ) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n  const handleConfirm = () => {\r\n    patchDetail();\r\n  }\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  }\r\n\r\n  const [remittanceModalShow, setRemittanceModalShow] = useState(false);\r\n  const remittanceClose = () => {\r\n    setRemittanceModalShow(false);\r\n  }\r\n\r\n  const remittanceShow = () => {\r\n    setRemittanceModalShow(true);\r\n    checkMemberRemittance();\r\n  }\r\n\r\n  const popover = (\r\n    <ExitPopover id=\"popover-basic\">\r\n      <ExitPopover.Body>\r\n        아래의 버튼을 클릭할 시, 해당 그룹에서 완전히 퇴장하게 됩니다.<br/>\r\n        <br/>\r\n        <b>그룹장이 퇴장할 경우, 해당 그룹은 완전히 사라집니다.</b><br/>\r\n        <br/>\r\n        <Button onClick={exitRoom}>그룹 퇴장</Button>\r\n      </ExitPopover.Body>\r\n    </ExitPopover>\r\n    );\r\n\r\n  return (\r\n    <OttPage>\r\n      {(groupDetail && groupDetail.members.length > 0) ? \r\n      <OttDiv>\r\n        <MembersDiv>\r\n          <TitleDiv>참여 멤버 ({groupDetail.members.length} / {groupDetail.max_member_num})</TitleDiv>\r\n          {groupDetail.members.map((member) => (\r\n            <MemberDiv key={member.user_id}>\r\n              <MemberUpperDiv>\r\n                {member.nickname} \r\n                {(member.authority === \"ADMIN\") ? <Tooltip title=\"그룹장\"><Icon src=\"./crown.png\" alt=\"admin\"/></Tooltip> : <></>}\r\n                {(member.user_id === store.getState().user.id) ? <Tooltip title=\"본인\"><Icon src=\"./avatar.png\" alt=\"avatar\"/></Tooltip> : <></>}\r\n              </MemberUpperDiv>\r\n              <MemberLowerDiv>\r\n                \r\n                {(member.authority === \"ADMIN\") ? <div> 계정주 </div> : <div>\r\n                  {(member.remittance === 1) ?  \"계정 공유중\" : <></>} </div>}\r\n              </MemberLowerDiv>\r\n            </MemberDiv>\r\n          ))}\r\n        </MembersDiv>\r\n\r\n        <ContentDiv>\r\n          <ContentTitle>{groupDetail.title}</ContentTitle>\r\n          <div>\r\n            <ContentLine1>\r\n              <ContentElement1>\r\n                <ClassIcon height=\"30px\" src={`./${groupDetail.classification}.png`}/>{translationPlatform(groupDetail.classification)}\r\n              </ContentElement1>\r\n              <ContentElement1>{moment(groupDetail.created).format('YYYY년 MM월 DD일')} 생성</ContentElement1>\r\n            </ContentLine1>\r\n            \r\n            <ContentLine2>\r\n              공지사항\r\n              <ContentElement2>\r\n                {groupDetail.notice ? <>{groupDetail.notice}</> : <>공지사항이 없습니다.</>}\r\n              </ContentElement2>\r\n            </ContentLine2>\r\n            \r\n            <ContentLine3>\r\n              <ContentElement3>\r\n                <ContentTitle3>기간 정보</ContentTitle3>\r\n                {groupDetail.start_date ? <>\r\n                  예상 공유 시작일 : {moment(groupDetail.start_date).format('YYYY년 MM월 DD일')} <br/>\r\n                  {groupDetail.term ? <>\r\n                    기간 : {groupDetail.term}일 <br/>\r\n                    예상 공유 종료일 : {moment(groupDetail.end_date).format('YYYY년 MM월 DD일')} <br/>\r\n                    </> : <>\r\n                      입력된 공유 기간 정보가 없습니다.\r\n                    </>}\r\n                </> : <>\r\n                  기간 정보가 없습니다.\r\n                </>}\r\n                \r\n              </ContentElement3>\r\n              <ContentElement3>\r\n                <ContentTitle3>계좌 정보</ContentTitle3>\r\n                {groupDetail.account ? <>\r\n                  송금 계좌 : {groupDetail.account} <br/>\r\n                  총 결제 금액 : {groupDetail.total_money}원 <br/>\r\n                  멤버별 결제 금액 : {groupDetail.div_money}원 <br/>\r\n                </> : <>\r\n                  계좌 정보가 없습니다.\r\n                </>}\r\n              </ContentElement3>\r\n            </ContentLine3>\r\n          \r\n            <ContentLine4>\r\n            <h3>계정 공유란</h3>\r\n              {Object.keys(groupDetail).includes('ott_id') ? <ContentElement4>\r\n                {groupDetail.ott_id ? <>\r\n                  공유 ID : {groupDetail.ott_id} <br/>\r\n                  공유 PW : {groupDetail.ott_pwd}\r\n                </> : <>\r\n                  계정 정보가 없습니다.\r\n                </>}\r\n              </ContentElement4> : <ContentElement4_2>\r\n                아직 계정이 공유되지 않습니다. 그룹장의 송금 확인이 필요합니다.\r\n              </ContentElement4_2>}\r\n            </ContentLine4>\r\n            \r\n          </div>\r\n        </ContentDiv>\r\n        <MenuDiv>\r\n          <TitleDiv>메뉴</TitleDiv>\r\n          {(store.getState().user.id === groupDetail.ADMIN[0].user_id) ? <>\r\n          <MenuButton onClick={handleShow}>수정하기</MenuButton>\r\n          <MenuButton onClick={remittanceShow}>송금 요청<br/>확인</MenuButton>\r\n          </> : <>\r\n          <MenuButton onClick={sendRemittanceDone}>송금 요청<br/>전송</MenuButton>\r\n          <MenuButton onClick={getRoomDetail}>계정 확인</MenuButton>\r\n          </>}\r\n            \r\n          <MenuButton to=\"/Ott\">목록으로<br/>돌아가기</MenuButton>\r\n          <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover}>\r\n            <ExitButton variant=\"success\">그룹 퇴장</ExitButton>\r\n          </OverlayTrigger>\r\n        </MenuDiv>\r\n    </OttDiv> : <div> No GroupDetail available.</div>}\r\n\r\n            \r\n\r\n    <CommentDiv>\r\n      {groupDetail && groupDetail.comments.length > 0 ? (\r\n        <>\r\n          {groupDetail.comments.map((comment) => ( \r\n            <Comment2 \r\n              key={comment.id}\r\n              actions={[\r\n                <div>\r\n                  {store.getState().user.id === comment.commenter ? (\r\n                      <CommentDeleteButton type=\"button\" id={comment.id} onClick={deleteOnClick} >댓글 삭제</CommentDeleteButton>\r\n                      ) : (<p></p>)\r\n                  }\r\n                </div>\r\n              ]}\r\n              content={\r\n                <CommentContent>\r\n                  <div>        \r\n                    <b>{comment.nickname}</b> &nbsp;{moment(comment.created).format(\"YYYY-MM-DD hh:mm\")} 작성<br/>\r\n                  </div>\r\n                  <div> \r\n                    {comment.contents}\r\n                  </div>\r\n                </CommentContent>\r\n              }>\r\n            </Comment2>\r\n          ))}\r\n        </>):(\r\n          <NonCommentDiv>댓글이 없습니다.</NonCommentDiv>\r\n        )}\r\n      </CommentDiv>\r\n      \r\n      {store.getState().user ? (\r\n        <CommentForm style={{ display: 'flex' }}>\r\n          <textarea style={{ width: '80%', borderRadius: '2px' }}\r\n            onChange={commentsChange} placeholder=\"댓글을 입력해주세요\">\r\n          </textarea>\r\n          <CommentButton style={{ width: '20%', height: '52px' }} onClick={writeOnClick}>작성</CommentButton>\r\n        </CommentForm>\r\n        ):(<CommentForm>댓글을 작성하려면 로그인하세요.</CommentForm>)} \r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body> \r\n          {groupDetail ? (\r\n            <InputContainer>\r\n              <InputTitle>그룹 내용 수정</InputTitle>\r\n              <InputLabel>그룹 이름</InputLabel>\r\n              <Input required={true} type=\"text\" defaultValue={groupDetail.title} onChange={detailTitleChange} minLength={2}/>\r\n              <InputLabel>공지사항</InputLabel>\r\n              <NoticeInput placeholder=\"그룹의 멤버들에게 공지할 사항을 입력해주세요.\" defaultValue={groupDetail.notice} onChange={noticeChange}/>\r\n              <hr/>\r\n              <InputTitle>계좌 및 금액 정보</InputTitle>\r\n              <InputDiv>\r\n                <div>\r\n                  <InputLabel>계좌 정보</InputLabel>\r\n                  <HalfInput required={true} type=\"text\" placeholder=\"계좌 정보를 입력하세요.\" defaultValue={groupDetail.account} onChange={accountChange}/>\r\n                </div>\r\n                <UnitDiv>\r\n                  <InputLabel>총 결제 금액</InputLabel>\r\n                  <UnitInput required={true} type=\"number\" pattern=\"[0-9]*\" defaultValue={groupDetail.total_money} onChange={newMoneyChange}/> <UnitLabel>원</UnitLabel>\r\n                </UnitDiv>\r\n              </InputDiv>\r\n              <hr/>\r\n              \r\n              <InputTitle>기간 정보</InputTitle>\r\n              <InputDiv>\r\n                <div>\r\n                  <InputLabel>예상 서비스 시작일</InputLabel>\r\n                  <HalfInput required={true} type=\"date\" defaultValue={moment(groupDetail.start_date).format('YYYY-MM-DD')} onChange={start_dateChange}/>\r\n                </div>\r\n                <div>\r\n                <InputLabel>예상 서비스 이용 기간</InputLabel>\r\n                  <UnitDiv>\r\n                    <UnitInput required={true} type=\"number\" pattern=\"[0-9]*\" defaultValue={groupDetail.term} onChange={termChange}/> <UnitLabel>일</UnitLabel>\r\n                  </UnitDiv>\r\n                </div>\r\n              </InputDiv>\r\n              <hr/>\r\n              <InputTitle>공유 계정 정보</InputTitle>\r\n              <InputDiv>\r\n                <div>\r\n                  <InputLabel>공유 ID</InputLabel>\r\n                  <HalfInput type=\"text\" defaultValue={groupDetail.ott_id} onChange={ott_idChange}/>\r\n                </div>\r\n                <div>\r\n                  <InputLabel>공유 비밀번호</InputLabel>\r\n                  <HalfInput type=\"text\" defaultValue={groupDetail.ott_pwd} onChange={ott_pwdChange}/>\r\n                </div>\r\n              </InputDiv>\r\n            </InputContainer>\r\n          ) : (<></>)}\r\n          \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <SelectButton variant=\"secondary\" onClick={handleClose}>\r\n            닫기\r\n          </SelectButton>\r\n          <SelectButton variant=\"primary\" onClick={handleConfirm}>\r\n            수정\r\n          </SelectButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={remittanceModalShow} onHide={remittanceClose}>\r\n        <Modal.Header closeButton>\r\n          <InputTitle>송금 요청 확인</InputTitle>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <RemittanceDiv>\r\n            {remittances && remittances.length ? (remittances.map((remittance) => ( \r\n            <Remittance key={remittance.remittanceCheck_id}>\r\n              {remittance.nickname} 님이 송금 확인을 요청하였습니다!&nbsp;&nbsp;\r\n              <SelectButton onClick={setMemberRemittance} value={remittance.user_id} name={remittance.remittanceCheck_id}>확인</SelectButton>\r\n            </Remittance>) \r\n            )): <Remittance>송금 확인 요청이 없습니다.</Remittance>}\r\n          </RemittanceDiv>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      \r\n\r\n    </OttPage>\r\n  )\r\n}\r\n\r\nexport default OttRoomPresenter;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport OttListPresenter from './Presenters/OttListPresenter';\r\nimport OttRoomPresenter from './Presenters/OttRoomPresenter';\r\nimport { HashRouter as Router, Route, useHistory, useLocation } from 'react-router-dom'; \r\nimport moment from \"moment\";\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nconst Ott = ({match}) => {\r\n  // below Room List\r\n\r\n  const [searchClass, setSearchClass] = useState();\r\n\r\n  const classChange = async (e) => {\r\n    if (e === \"all\") {\r\n      getRoomList();\r\n      setSearchClass(\"\");\r\n    }\r\n    else \r\n      setSearchClass(e);\r\n  }\r\n\r\n/*  \r\n  const axiosform = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/`, {withCredentials : true})\r\n    .then((response) => {    \r\n    })\r\n    .catch((error) => {\r\n    });\r\n  }\r\n  */\r\n  \r\n  const getClassRoomList = async () => {\r\n    if (!searchClass)\r\n      await getRoomList();\r\n    else {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/ott/search/${searchClass}`, {withCredentials : true})\r\n    .then((response) => {    \r\n      setRoomList(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  }\r\n\r\n  const [title, setTitle] = useState();\r\n  const [classification, setClassification] = useState(\"netflix\");\r\n  const [max_member_num, setMax_member_num] = useState();\r\n\r\n  const titleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  const classificationChange = (e) => {\r\n    setClassification(e.target.value);\r\n  }\r\n\r\n  const max_member_numChange = (e) => {\r\n    setMax_member_num(e.target.value);\r\n  }\r\n\r\n  const change = {classChange, titleChange, classificationChange, max_member_numChange};\r\n\r\n  const createRoom = async () => {\r\n    if (!(title && max_member_num)) {\r\n      swal(\"제목과 최대 인원을 입력해야 합니다.\");\r\n    }\r\n    else {\r\n      await axios.post(`${process.env.REACT_APP_SERVER_URL}/ott/make`, {title, classification, max_member_num}, {withCredentials : true})\r\n      .then((response) => {    \r\n        getRoomList();\r\n        getMyRoomList();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  const [groupDetail, setGroupDetail] = useState();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const getRoomDetail = async () => {\r\n    if (location.pathname === \"/Ott\") {\r\n      ; // in list page, do nothing\r\n    }\r\n    else {\r\n      await axios.get(`${process.env.REACT_APP_SERVER_URL}${location.pathname}`, {withCredentials : true})\r\n      .then((response) => {\r\n        setGroupDetail(response.data.result);\r\n        setDetailTitle(response.data.result.title);\r\n        setNotice(response.data.result.notice);\r\n        setAccount(response.data.result.account);\r\n        setOtt_id(response.data.result.ott_id);\r\n        setOtt_pwd(response.data.result.ott_pwd);\r\n        setTerm(response.data.result.term);\r\n        setStartDate(moment(response.data.result.start_date).format(\"YYYY-MM-DD\"));\r\n        setNewMoney(response.data.result.total_money);\r\n      })\r\n      .catch((error) => {\r\n        swal(error);\r\n        history.push(\"/\");\r\n      });\r\n    }\r\n  }\r\n\r\n  const enterRoom = async (e) => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/ott/participation/${e.target.value}`, {withCredentials : true})\r\n    .then((response) => {\r\n      if (response.data.code === 198) \r\n        swal(response.data.result);\r\n      else\r\n        history.push(`/Ott/${e.target.value}`);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const submit = {createRoom, enterRoom, translationPlatform};\r\n\r\n  const [roomList, setRoomList] = useState([]);\r\n  const [myRoomList, setMyRoomList] = useState([]);\r\n\r\n  const getRoomList = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/ott`, {withCredentials : true})\r\n    .then((response) => {    \r\n      setRoomList(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const getMyRoomList = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/ott/mine`, {withCredentials : true})\r\n    .then((response) => {    \r\n      setMyRoomList(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const props = {roomList, myRoomList, searchClass};\r\n\r\n\r\n  // below Room Detail\r\n\r\n  const [detailTitle, setDetailTitle] = useState();\r\n  const [notice, setNotice] = useState();\r\n  const [account, setAccount] = useState();\r\n  const [ott_id, setOtt_id] = useState();\r\n  const [ott_pwd, setOtt_pwd] = useState();\r\n  const [term, setTerm] = useState();\r\n  const [start_date, setStartDate] = useState();\r\n  const [newMoney, setNewMoney] = useState();\r\n\r\n  const detailTitleChange = (e) => {\r\n    setDetailTitle(e.target.value);\r\n  }\r\n\r\n  const noticeChange = (e) => {\r\n    setNotice(e.target.value);\r\n  }\r\n\r\n  const accountChange = (e) => {\r\n    setAccount(e.target.value);\r\n  }\r\n\r\n  const ott_idChange = (e) => {\r\n    setOtt_id(e.target.value);\r\n  }\r\n\r\n  const ott_pwdChange = (e) => {\r\n    setOtt_pwd(e.target.value);\r\n  }\r\n\r\n  const termChange = (e) => {\r\n    setTerm(e.target.value);\r\n  }\r\n\r\n  const start_dateChange = (e) => {\r\n    setStartDate(moment(e.target.value).format('YYYY-MM-DD'));\r\n  }\r\n\r\n  const newMoneyChange = (e) => {\r\n    setNewMoney(e.target.value);\r\n  }\r\n\r\n\r\n  function validateDate(date) {\r\n    let today = moment(new Date()).format('YYYY-MM-DD');\r\n    today = new Date(today);\r\n    let comp = new Date(date);\r\n\r\n    if (comp - today >= 0)\r\n      return false;\r\n    else \r\n      return true;\r\n  }\r\n\r\n  const patchDetail = async () => {\r\n    let title = detailTitle;\r\n    let money = newMoney;\r\n    if (validateDate(start_date)) {\r\n      swal(\"입력한 날짜가 유효하지 않습니다.\");\r\n      return 0;\r\n    }\r\n\r\n    if (detailTitle === \"\") {\r\n      swal(\"그룹 이름은 필수 입력 사항입니다.\");\r\n      return 0;\r\n    }\r\n\r\n\r\n    let tempDate = new Date(start_date);\r\n    tempDate.setDate(tempDate.getDate() + Number(term));\r\n    let end_date = moment(tempDate).format('YYYY-MM-DD');\r\n    await axios.patch(`${process.env.REACT_APP_SERVER_URL}${location.pathname}`, {title, notice, account, ott_id, ott_pwd, term, start_date, end_date, money}, {withCredentials : true})\r\n    .then((response) => {    \r\n      swal(\"수정이 완료됐습니다.\");\r\n      getRoomDetail();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  const exitRoom = async () => {\r\n    await axios.delete(`${process.env.REACT_APP_SERVER_URL}/ott/${groupDetail.id}`, {withCredentials : true})\r\n    .then((response) => {    \r\n      history.push(\"/ott\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const [remittances, setRemittances] = useState();\r\n\r\n  const checkMemberRemittance = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/ott/remittance/${groupDetail.id}`, {withCredentials : true})\r\n    .then((response) => {    \r\n      setRemittances(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const sendRemittanceDone = async () => {\r\n    let groupId = groupDetail.id;\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/ott/remittance`, {groupId}, {withCredentials : true})\r\n    .then((response) => {    \r\n      swal(response.data.result);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const setMemberRemittance = async (e) =>{\r\n    let groupId = groupDetail.id\r\n    let user_id = e.target.value;\r\n    let remittance_id = e.target.name;\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/ott/remittance/complete`, {groupId, user_id, remittance_id}, {withCredentials : true})\r\n    .then((response) => {    \r\n      swal(`사용자의 송금 요청을 승인했습니다. 이제 해당 사용자와 OTT 플랫폼 계정 정보를 공유합니다.`);\r\n      getRoomDetail();\r\n      checkMemberRemittance();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const [contents, setContents] = useState();\r\n\r\n  const commentsChange = (e) => {\r\n    setContents(e.target.value);\r\n  }\r\n\r\n  const writeOnClick = async () => {\r\n    await axios.post(`${process.env.REACT_APP_SERVER_URL}/ott/comment/${groupDetail.id}`, { contents }, {withCredentials : true})\r\n    .then((response) => {\r\n     getRoomDetail();\r\n    })\r\n    .catch((error)=> {\r\n      console.log(error);\r\n      swal(\"댓글 작성 중 오류가 발생했습니다.\")\r\n    })\r\n  }\r\n\r\n  const deleteOnClick = async (e) => {\r\n    await axios.delete(`${process.env.REACT_APP_SERVER_URL}/ott/comment/${e.target.id}`, {withCredentials: true})\r\n    .then((response) => {\r\n     swal(\"리뷰가 삭제되었습니다.\")\r\n     getRoomDetail();\r\n    })\r\n    .catch((error)=> {\r\n      swal(error.response.data.message);\r\n    }) \r\n  }\r\n\r\n  function translationPlatform(platform) {\r\n    if (platform === \"netflix\")\r\n      return (\"넷플릭스\");\r\n    else if (platform === \"watcha\")\r\n      return (\"왓챠\");\r\n    else if (platform === \"wave\")\r\n      return (\"웨이브\");\r\n    else if (platform === \"tving\")\r\n      return (\"티빙\");\r\n    else\r\n      return (\"기타\");\r\n  }\r\n\r\n  const detailChange = {detailTitleChange, noticeChange, accountChange, ott_idChange, ott_pwdChange, termChange, start_dateChange, newMoneyChange, commentsChange};\r\n  const detailSubmit = {patchDetail, exitRoom, translationPlatform, checkMemberRemittance, sendRemittanceDone, setMemberRemittance, writeOnClick, deleteOnClick, getRoomDetail};\r\n\r\n\r\n  useEffect(() => getRoomList(), [window.location.href]);\r\n  useEffect(() => getMyRoomList(), [window.location.href]);\r\n  useEffect(() => getRoomDetail(), [window.location.href]);\r\n  useEffect(() => getClassRoomList(), [searchClass]);\r\n\r\n  return (\r\n    <Router>\r\n      <Route exact path={match.path}>\r\n        <OttListPresenter {...change} {...submit} {...props}/>\r\n      </Route>\r\n      <Route path={`${match.path}/:id`}>\r\n        <OttRoomPresenter groupDetail={groupDetail} remittances={remittances} {...detailChange} {...detailSubmit}/>\r\n      </Route>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Ott;","import './App.css';\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Main from './routes/Main.js';\r\nimport Auth from './routes/Auth.js';\r\nimport Join from './routes/Join.js';\r\nimport Header from './routes/Header.js';\r\nimport Search from './routes/Search.js';\r\nimport Detail from './routes/Detail.js';\r\nimport MyPage from './routes/MyPage.js';\r\nimport Genre from './routes/Genre.js';\r\nimport Recomm from './routes/Recomm.js'\r\nimport Ott from './routes/Ott.js'\r\n\r\nimport store from \"./store\";\r\nimport axios from 'axios';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom'; \r\nimport { Footer } from 'antd/lib/layout/layout';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterDesign = styled(Footer)`\r\n  font-family:  system-ui;\r\n  font-size: 12px;\r\n  background-color: #6B66FF;\r\n  color: white;\r\n  height: 70px;\r\n  border-width : 3px 0 0 0;\r\n  border-style : solid ;\r\n  border-color: #595959;\r\n  padding-top: 17px;\r\n  min-width:1190px;\r\n`;\r\n\r\nfunction App() {\r\n  const [isLoginChecked, setIsLoginChecked] = useState(false);\r\n  const loginCheck = async () => {\r\n    await axios.get(`${process.env.REACT_APP_SERVER_URL}/auth/login`, { withCredentials: true })\r\n    .then(async (result) => {\r\n        await store.dispatch({ type: 'LOGIN', user: result.data.data });\r\n        setIsLoginChecked(true);\r\n      })\r\n    .catch(() => {\r\n      setIsLoginChecked(true);\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    loginCheck();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isLoginChecked && (\r\n        <Router>\r\n            <Header />\r\n          <Route exact path=\"/\">\r\n            <Main />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Auth />\r\n          </Route>\r\n          <Route exact path=\"/join\">\r\n            <Join />\r\n          </Route>\r\n          <Route exact path=\"/search\">\r\n            <Search />\r\n          </Route>\r\n          <Route exact path=\"/genre/:tag\" component={Genre}/>\r\n\r\n          <Route exact path=\"/detail\" component={Detail}/>\r\n          <Route exact path=\"/mypage\">\r\n            <MyPage />\r\n          </Route>\r\n          <Route exact path=\"/recomm\" component={Recomm}/>\r\n          <Route path=\"/ott\" component={Ott}/>\r\n        </Router>\r\n      )}\r\n      <FooterDesign>Made by SangMyung University<br/>CS GladOS Team</FooterDesign>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}